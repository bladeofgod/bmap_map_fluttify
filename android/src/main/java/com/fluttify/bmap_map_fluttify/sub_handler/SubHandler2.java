//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package com.fluttify.bmap_map_fluttify.sub_handler;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.platform.PlatformViewRegistry;

import com.fluttify.bmap_map_fluttify.BmapMapFluttifyPlugin.Handler;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class SubHandler2 {
    public static Map<String, Handler> getSubHandler(BinaryMessenger messenger) {
        return new HashMap<String, Handler>() {{
            // method
            put("com.baidu.mapapi.map.PolylineOptions::clickable", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolylineOptions ref = (com.baidu.mapapi.map.PolylineOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolylineOptions@" + refId + "::clickable(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.PolylineOptions result;
                try {
                    result = ref.clickable(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolylineOptions::dottedLineType", (args, methodResult) -> {
                // args
                // enum arg
                com.baidu.mapapi.map.PolylineDottedLineType var1 = com.baidu.mapapi.map.PolylineDottedLineType.values()[(int) ((Map<String, Object>) args).get("var1")];
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolylineOptions ref = (com.baidu.mapapi.map.PolylineOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolylineOptions@" + refId + "::dottedLineType(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.PolylineOptions result;
                try {
                    result = ref.dottedLineType(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolylineOptions::isThined", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolylineOptions ref = (com.baidu.mapapi.map.PolylineOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolylineOptions@" + refId + "::isThined(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.PolylineOptions result;
                try {
                    result = ref.isThined(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolylineOptions::visible", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolylineOptions ref = (com.baidu.mapapi.map.PolylineOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolylineOptions@" + refId + "::visible(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.PolylineOptions result;
                try {
                    result = ref.visible(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolylineOptions::focus", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolylineOptions ref = (com.baidu.mapapi.map.PolylineOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolylineOptions@" + refId + "::focus(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.PolylineOptions result;
                try {
                    result = ref.focus(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolylineOptions::dottedLine", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolylineOptions ref = (com.baidu.mapapi.map.PolylineOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolylineOptions@" + refId + "::dottedLine(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.PolylineOptions result;
                try {
                    result = ref.dottedLine(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolylineOptions::isDottedLine", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolylineOptions ref = (com.baidu.mapapi.map.PolylineOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolylineOptions@" + refId + "::isDottedLine(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isDottedLine();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolylineOptions::isVisible", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolylineOptions ref = (com.baidu.mapapi.map.PolylineOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolylineOptions@" + refId + "::isVisible(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isVisible();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolylineOptions::isFocus", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolylineOptions ref = (com.baidu.mapapi.map.PolylineOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolylineOptions@" + refId + "::isFocus(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isFocus();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolylineOptions::zIndex", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolylineOptions ref = (com.baidu.mapapi.map.PolylineOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolylineOptions@" + refId + "::zIndex(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.PolylineOptions result;
                try {
                    result = ref.zIndex(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolylineOptions::getZIndex", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolylineOptions ref = (com.baidu.mapapi.map.PolylineOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolylineOptions@" + refId + "::getZIndex(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getZIndex();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolylineOptions::extraInfo", (args, methodResult) -> {
                // args
                // ref arg
                android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolylineOptions ref = (com.baidu.mapapi.map.PolylineOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolylineOptions@" + refId + "::extraInfo(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.PolylineOptions result;
                try {
                    result = ref.extraInfo(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolylineOptions::getExtraInfo", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolylineOptions ref = (com.baidu.mapapi.map.PolylineOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolylineOptions@" + refId + "::getExtraInfo(" + "" + ")");
                }
            
                // invoke native method
                android.os.Bundle result;
                try {
                    result = ref.getExtraInfo();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Tile::toBundle", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Tile ref = (com.baidu.mapapi.map.Tile) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Tile@" + refId + "::toBundle(" + "" + ")");
                }
            
                // invoke native method
                android.os.Bundle result;
                try {
                    result = ref.toBundle();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.BaiduMap.OnBaseIndoorMapListener::onBaseIndoorMapMode", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
                // ref arg
                com.baidu.mapapi.map.MapBaseIndoorMapInfo var2 = (com.baidu.mapapi.map.MapBaseIndoorMapInfo) getHEAP().get((int) ((Map<String, Object>) args).get("var2"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.BaiduMap.OnBaseIndoorMapListener ref = (com.baidu.mapapi.map.BaiduMap.OnBaseIndoorMapListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.BaiduMap.OnBaseIndoorMapListener@" + refId + "::onBaseIndoorMapMode(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.onBaseIndoorMapMode(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.BaiduMap.OnMapTouchListener::onTouch", (args, methodResult) -> {
                // args
                // ref arg
                android.view.MotionEvent var1 = (android.view.MotionEvent) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.BaiduMap.OnMapTouchListener ref = (com.baidu.mapapi.map.BaiduMap.OnMapTouchListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.BaiduMap.OnMapTouchListener@" + refId + "::onTouch(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onTouch(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.TileProvider::getMaxDisLevel", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.TileProvider ref = (com.baidu.mapapi.map.TileProvider) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.TileProvider@" + refId + "::getMaxDisLevel(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getMaxDisLevel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.TileProvider::getMinDisLevel", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.TileProvider ref = (com.baidu.mapapi.map.TileProvider) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.TileProvider@" + refId + "::getMinDisLevel(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getMinDisLevel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::image", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.BitmapDescriptor var1 = (com.baidu.mapapi.map.BitmapDescriptor) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::image(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.GroundOverlayOptions result;
                try {
                    result = ref.image(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::getImage", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::getImage(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.BitmapDescriptor result;
                try {
                    result = ref.getImage();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::position", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.model.LatLng var1 = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::position(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.GroundOverlayOptions result;
                try {
                    result = ref.position(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::getPosition", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::getPosition(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.model.LatLng result;
                try {
                    result = ref.getPosition();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::dimensions__int", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::dimensions(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.GroundOverlayOptions result;
                try {
                    result = ref.dimensions(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::dimensions__int__int", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::dimensions(" + var1 + var2 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.GroundOverlayOptions result;
                try {
                    result = ref.dimensions(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::getWidth", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::getWidth(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getWidth();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::getHeight", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::getHeight(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getHeight();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::anchor", (args, methodResult) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                Double var2 = (Double) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::anchor(" + var1 + var2 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.GroundOverlayOptions result;
                try {
                    result = ref.anchor(new Double(var1).floatValue(), new Double(var2).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::getAnchorX", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::getAnchorX(" + "" + ")");
                }
            
                // invoke native method
                float result;
                try {
                    result = ref.getAnchorX();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::getAnchorY", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::getAnchorY(" + "" + ")");
                }
            
                // invoke native method
                float result;
                try {
                    result = ref.getAnchorY();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::positionFromBounds", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.model.LatLngBounds var1 = (com.baidu.mapapi.model.LatLngBounds) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::positionFromBounds(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.GroundOverlayOptions result;
                try {
                    result = ref.positionFromBounds(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::getBounds", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::getBounds(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.model.LatLngBounds result;
                try {
                    result = ref.getBounds();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::transparency", (args, methodResult) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::transparency(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.GroundOverlayOptions result;
                try {
                    result = ref.transparency(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::getTransparency", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::getTransparency(" + "" + ")");
                }
            
                // invoke native method
                float result;
                try {
                    result = ref.getTransparency();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::visible", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::visible(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.GroundOverlayOptions result;
                try {
                    result = ref.visible(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::isVisible", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::isVisible(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isVisible();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::zIndex", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::zIndex(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.GroundOverlayOptions result;
                try {
                    result = ref.zIndex(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::getZIndex", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::getZIndex(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getZIndex();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::extraInfo", (args, methodResult) -> {
                // args
                // ref arg
                android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::extraInfo(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.GroundOverlayOptions result;
                try {
                    result = ref.extraInfo(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlayOptions::getExtraInfo", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlayOptions ref = (com.baidu.mapapi.map.GroundOverlayOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlayOptions@" + refId + "::getExtraInfo(" + "" + ")");
                }
            
                // invoke native method
                android.os.Bundle result;
                try {
                    result = ref.getExtraInfo();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlay::setImage", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.BitmapDescriptor var1 = (com.baidu.mapapi.map.BitmapDescriptor) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlay ref = (com.baidu.mapapi.map.GroundOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlay@" + refId + "::setImage(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setImage(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlay::getImage", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlay ref = (com.baidu.mapapi.map.GroundOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlay@" + refId + "::getImage(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.BitmapDescriptor result;
                try {
                    result = ref.getImage();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlay::setPosition", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.model.LatLng var1 = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlay ref = (com.baidu.mapapi.map.GroundOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlay@" + refId + "::setPosition(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPosition(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlay::getPosition", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlay ref = (com.baidu.mapapi.map.GroundOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlay@" + refId + "::getPosition(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.model.LatLng result;
                try {
                    result = ref.getPosition();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlay::setDimensions__int", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlay ref = (com.baidu.mapapi.map.GroundOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlay@" + refId + "::setDimensions(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDimensions(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlay::setDimensions__int__int", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlay ref = (com.baidu.mapapi.map.GroundOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlay@" + refId + "::setDimensions(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDimensions(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlay::getWidth", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlay ref = (com.baidu.mapapi.map.GroundOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlay@" + refId + "::getWidth(" + "" + ")");
                }
            
                // invoke native method
                double result;
                try {
                    result = ref.getWidth();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                double jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlay::getHeight", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlay ref = (com.baidu.mapapi.map.GroundOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlay@" + refId + "::getHeight(" + "" + ")");
                }
            
                // invoke native method
                double result;
                try {
                    result = ref.getHeight();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                double jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlay::setAnchor", (args, methodResult) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                Double var2 = (Double) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlay ref = (com.baidu.mapapi.map.GroundOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlay@" + refId + "::setAnchor(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setAnchor(new Double(var1).floatValue(), new Double(var2).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlay::getAnchorX", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlay ref = (com.baidu.mapapi.map.GroundOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlay@" + refId + "::getAnchorX(" + "" + ")");
                }
            
                // invoke native method
                float result;
                try {
                    result = ref.getAnchorX();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlay::getAnchorY", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlay ref = (com.baidu.mapapi.map.GroundOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlay@" + refId + "::getAnchorY(" + "" + ")");
                }
            
                // invoke native method
                float result;
                try {
                    result = ref.getAnchorY();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlay::setPositionFromBounds", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.model.LatLngBounds var1 = (com.baidu.mapapi.model.LatLngBounds) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlay ref = (com.baidu.mapapi.map.GroundOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlay@" + refId + "::setPositionFromBounds(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPositionFromBounds(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlay::getBounds", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlay ref = (com.baidu.mapapi.map.GroundOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlay@" + refId + "::getBounds(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.model.LatLngBounds result;
                try {
                    result = ref.getBounds();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlay::setTransparency", (args, methodResult) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlay ref = (com.baidu.mapapi.map.GroundOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlay@" + refId + "::setTransparency(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setTransparency(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.GroundOverlay::getTransparency", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.GroundOverlay ref = (com.baidu.mapapi.map.GroundOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.GroundOverlay@" + refId + "::getTransparency(" + "" + ")");
                }
            
                // invoke native method
                float result;
                try {
                    result = ref.getTransparency();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::icon", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.BitmapDescriptor var1 = (com.baidu.mapapi.map.BitmapDescriptor) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::icon(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.icon(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::animateType", (args, methodResult) -> {
                // args
                // enum arg
                com.baidu.mapapi.map.MarkerOptions.MarkerAnimateType var1 = com.baidu.mapapi.map.MarkerOptions.MarkerAnimateType.values()[(int) ((Map<String, Object>) args).get("var1")];
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::animateType(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.animateType(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::getAnimateType", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::getAnimateType(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions.MarkerAnimateType result;
                try {
                    result = ref.getAnimateType();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::alpha", (args, methodResult) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::alpha(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.alpha(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::scaleX", (args, methodResult) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::scaleX(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.scaleX(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::scaleY", (args, methodResult) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::scaleY(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.scaleY(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::getAlpha", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::getAlpha(" + "" + ")");
                }
            
                // invoke native method
                float result;
                try {
                    result = ref.getAlpha();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::getIcon", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::getIcon(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.BitmapDescriptor result;
                try {
                    result = ref.getIcon();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::icons", (args, methodResult) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) args).get("var1");
                List<com.baidu.mapapi.map.BitmapDescriptor> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    var1.add((com.baidu.mapapi.map.BitmapDescriptor) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::icons(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.icons(new ArrayList(var1));
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::getIcons", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::getIcons(" + "" + ")");
                }
            
                // invoke native method
                List<com.baidu.mapapi.map.BitmapDescriptor> result;
                try {
                    result = ref.getIcons();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (result != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.baidu.mapapi.map.BitmapDescriptor item : result) {
                        getHEAP().put(item.hashCode(), item);
                        jsonableResult.add(item.hashCode());
                    }
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::period", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::period(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.period(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::getPeriod", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::getPeriod(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getPeriod();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::position", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.model.LatLng var1 = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::position(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.position(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::getPosition", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::getPosition(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.model.LatLng result;
                try {
                    result = ref.getPosition();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::perspective", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::perspective(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.perspective(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::isPerspective", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::isPerspective(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isPerspective();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::yOffset", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::yOffset(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.yOffset(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::draggable", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::draggable(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.draggable(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::isFlat", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::isFlat(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isFlat();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::flat", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::flat(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.flat(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::isDraggable", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::isDraggable(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isDraggable();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::clickable", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::clickable(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.clickable(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::anchor", (args, methodResult) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                Double var2 = (Double) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::anchor(" + var1 + var2 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.anchor(new Double(var1).floatValue(), new Double(var2).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::getAnchorX", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::getAnchorX(" + "" + ")");
                }
            
                // invoke native method
                float result;
                try {
                    result = ref.getAnchorX();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::getAnchorY", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::getAnchorY(" + "" + ")");
                }
            
                // invoke native method
                float result;
                try {
                    result = ref.getAnchorY();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::rotate", (args, methodResult) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::rotate(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.rotate(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::getRotate", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::getRotate(" + "" + ")");
                }
            
                // invoke native method
                float result;
                try {
                    result = ref.getRotate();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::fixedScreenPosition", (args, methodResult) -> {
                // args
                // ref arg
                android.graphics.Point var1 = (android.graphics.Point) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::fixedScreenPosition(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.fixedScreenPosition(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::infoWindow", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.InfoWindow var1 = (com.baidu.mapapi.map.InfoWindow) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::infoWindow(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.infoWindow(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::visible", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::visible(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.visible(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::isVisible", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::isVisible(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isVisible();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::zIndex", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::zIndex(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.zIndex(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::getZIndex", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::getZIndex(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getZIndex();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::extraInfo", (args, methodResult) -> {
                // args
                // ref arg
                android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::extraInfo(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MarkerOptions result;
                try {
                    result = ref.extraInfo(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MarkerOptions::getExtraInfo", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MarkerOptions ref = (com.baidu.mapapi.map.MarkerOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MarkerOptions@" + refId + "::getExtraInfo(" + "" + ")");
                }
            
                // invoke native method
                android.os.Bundle result;
                try {
                    result = ref.getExtraInfo();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.BaiduMap.OnMapStatusChangeListener::onMapStatusChangeStart__com_baidu_mapapi_map_MapStatus", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.MapStatus var1 = (com.baidu.mapapi.map.MapStatus) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.BaiduMap.OnMapStatusChangeListener ref = (com.baidu.mapapi.map.BaiduMap.OnMapStatusChangeListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.BaiduMap.OnMapStatusChangeListener@" + refId + "::onMapStatusChangeStart(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onMapStatusChangeStart(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.BaiduMap.OnMapStatusChangeListener::onMapStatusChangeStart__com_baidu_mapapi_map_MapStatus__int", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.MapStatus var1 = (com.baidu.mapapi.map.MapStatus) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.BaiduMap.OnMapStatusChangeListener ref = (com.baidu.mapapi.map.BaiduMap.OnMapStatusChangeListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.BaiduMap.OnMapStatusChangeListener@" + refId + "::onMapStatusChangeStart(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.onMapStatusChangeStart(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.BaiduMap.OnMapStatusChangeListener::onMapStatusChange", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.MapStatus var1 = (com.baidu.mapapi.map.MapStatus) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.BaiduMap.OnMapStatusChangeListener ref = (com.baidu.mapapi.map.BaiduMap.OnMapStatusChangeListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.BaiduMap.OnMapStatusChangeListener@" + refId + "::onMapStatusChange(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onMapStatusChange(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.BaiduMap.OnMapStatusChangeListener::onMapStatusChangeFinish", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.MapStatus var1 = (com.baidu.mapapi.map.MapStatus) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.BaiduMap.OnMapStatusChangeListener ref = (com.baidu.mapapi.map.BaiduMap.OnMapStatusChangeListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.BaiduMap.OnMapStatusChangeListener@" + refId + "::onMapStatusChangeFinish(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onMapStatusChangeFinish(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.InfoWindow.OnInfoWindowClickListener::onInfoWindowClick", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.InfoWindow.OnInfoWindowClickListener ref = (com.baidu.mapapi.map.InfoWindow.OnInfoWindowClickListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.InfoWindow.OnInfoWindowClickListener@" + refId + "::onInfoWindowClick(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onInfoWindowClick();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.BaiduMap.OnMapDrawFrameCallback::onMapDrawFrame__com_baidu_mapapi_map_MapStatus", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.MapStatus var1 = (com.baidu.mapapi.map.MapStatus) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.BaiduMap.OnMapDrawFrameCallback ref = (com.baidu.mapapi.map.BaiduMap.OnMapDrawFrameCallback) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.BaiduMap.OnMapDrawFrameCallback@" + refId + "::onMapDrawFrame(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onMapDrawFrame(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.BaiduMap.OnMapDoubleClickListener::onMapDoubleClick", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.model.LatLng var1 = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.BaiduMap.OnMapDoubleClickListener ref = (com.baidu.mapapi.map.BaiduMap.OnMapDoubleClickListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.BaiduMap.OnMapDoubleClickListener@" + refId + "::onMapDoubleClick(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onMapDoubleClick(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MapCustomStyleOptions::localCustomStylePath", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MapCustomStyleOptions ref = (com.baidu.mapapi.map.MapCustomStyleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MapCustomStyleOptions@" + refId + "::localCustomStylePath(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MapCustomStyleOptions result;
                try {
                    result = ref.localCustomStylePath(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MapCustomStyleOptions::customStyleId", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MapCustomStyleOptions ref = (com.baidu.mapapi.map.MapCustomStyleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MapCustomStyleOptions@" + refId + "::customStyleId(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.MapCustomStyleOptions result;
                try {
                    result = ref.customStyleId(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MapCustomStyleOptions::getLocalCustomStyleFilePath", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MapCustomStyleOptions ref = (com.baidu.mapapi.map.MapCustomStyleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MapCustomStyleOptions@" + refId + "::getLocalCustomStyleFilePath(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getLocalCustomStyleFilePath();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MapCustomStyleOptions::getCustomMapStyleId", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MapCustomStyleOptions ref = (com.baidu.mapapi.map.MapCustomStyleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MapCustomStyleOptions@" + refId + "::getCustomMapStyleId(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getCustomMapStyleId();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.BaiduMap.OnMapLoadedCallback::onMapLoaded", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.BaiduMap.OnMapLoadedCallback ref = (com.baidu.mapapi.map.BaiduMap.OnMapLoadedCallback) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.BaiduMap.OnMapLoadedCallback@" + refId + "::onMapLoaded(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onMapLoaded();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Arc::getColor", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Arc ref = (com.baidu.mapapi.map.Arc) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Arc@" + refId + "::getColor(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getColor();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Arc::getStartPoint", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Arc ref = (com.baidu.mapapi.map.Arc) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Arc@" + refId + "::getStartPoint(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.model.LatLng result;
                try {
                    result = ref.getStartPoint();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Arc::getMiddlePoint", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Arc ref = (com.baidu.mapapi.map.Arc) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Arc@" + refId + "::getMiddlePoint(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.model.LatLng result;
                try {
                    result = ref.getMiddlePoint();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Arc::getEndPoint", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Arc ref = (com.baidu.mapapi.map.Arc) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Arc@" + refId + "::getEndPoint(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.model.LatLng result;
                try {
                    result = ref.getEndPoint();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Arc::getWidth", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Arc ref = (com.baidu.mapapi.map.Arc) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Arc@" + refId + "::getWidth(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getWidth();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Arc::setColor", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Arc ref = (com.baidu.mapapi.map.Arc) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Arc@" + refId + "::setColor(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setColor(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Arc::setPoints", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.model.LatLng var1 = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
                // ref arg
                com.baidu.mapapi.model.LatLng var2 = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var2"));
                // ref arg
                com.baidu.mapapi.model.LatLng var3 = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var3"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Arc ref = (com.baidu.mapapi.map.Arc) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Arc@" + refId + "::setPoints(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPoints(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Arc::setWidth", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Arc ref = (com.baidu.mapapi.map.Arc) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Arc@" + refId + "::setWidth(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setWidth(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Circle::getCenter", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Circle ref = (com.baidu.mapapi.map.Circle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Circle@" + refId + "::getCenter(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.model.LatLng result;
                try {
                    result = ref.getCenter();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Circle::getFillColor", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Circle ref = (com.baidu.mapapi.map.Circle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Circle@" + refId + "::getFillColor(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getFillColor();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Circle::getRadius", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Circle ref = (com.baidu.mapapi.map.Circle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Circle@" + refId + "::getRadius(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getRadius();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Circle::getStroke", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Circle ref = (com.baidu.mapapi.map.Circle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Circle@" + refId + "::getStroke(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.Stroke result;
                try {
                    result = ref.getStroke();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Circle::setCenter", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.model.LatLng var1 = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Circle ref = (com.baidu.mapapi.map.Circle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Circle@" + refId + "::setCenter(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCenter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Circle::setFillColor", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Circle ref = (com.baidu.mapapi.map.Circle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Circle@" + refId + "::setFillColor(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setFillColor(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Circle::setRadius", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Circle ref = (com.baidu.mapapi.map.Circle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Circle@" + refId + "::setRadius(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRadius(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Circle::setStroke", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.Stroke var1 = (com.baidu.mapapi.map.Stroke) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Circle ref = (com.baidu.mapapi.map.Circle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Circle@" + refId + "::setStroke(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setStroke(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Circle::setDottedStroke", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Circle ref = (com.baidu.mapapi.map.Circle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Circle@" + refId + "::setDottedStroke(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDottedStroke(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Circle::isDottedStroke", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Circle ref = (com.baidu.mapapi.map.Circle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Circle@" + refId + "::isDottedStroke(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isDottedStroke();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Circle::setDottedStrokeType", (args, methodResult) -> {
                // args
                // enum arg
                com.baidu.mapapi.map.CircleDottedStrokeType var1 = com.baidu.mapapi.map.CircleDottedStrokeType.values()[(int) ((Map<String, Object>) args).get("var1")];
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Circle ref = (com.baidu.mapapi.map.Circle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Circle@" + refId + "::setDottedStrokeType(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDottedStrokeType(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Circle::getDottedStrokeType", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Circle ref = (com.baidu.mapapi.map.Circle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Circle@" + refId + "::getDottedStrokeType(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getDottedStrokeType();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Circle::setHoleOption", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.HoleOptions var1 = (com.baidu.mapapi.map.HoleOptions) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Circle ref = (com.baidu.mapapi.map.Circle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Circle@" + refId + "::setHoleOption(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setHoleOption(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Circle::getHoleOption", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Circle ref = (com.baidu.mapapi.map.Circle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Circle@" + refId + "::getHoleOption(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.HoleOptions result;
                try {
                    result = ref.getHoleOption();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Circle::setHoleOptions", (args, methodResult) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) args).get("var1");
                List<com.baidu.mapapi.map.HoleOptions> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    var1.add((com.baidu.mapapi.map.HoleOptions) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Circle ref = (com.baidu.mapapi.map.Circle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Circle@" + refId + "::setHoleOptions(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setHoleOptions(new ArrayList(var1));
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Circle::getHoleOptions", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Circle ref = (com.baidu.mapapi.map.Circle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Circle@" + refId + "::getHoleOptions(" + "" + ")");
                }
            
                // invoke native method
                List<com.baidu.mapapi.map.HoleOptions> result;
                try {
                    result = ref.getHoleOptions();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (result != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.baidu.mapapi.map.HoleOptions item : result) {
                        getHEAP().put(item.hashCode(), item);
                        jsonableResult.add(item.hashCode());
                    }
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.BaiduMap.OnMapRenderCallback::onMapRenderFinished", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.BaiduMap.OnMapRenderCallback ref = (com.baidu.mapapi.map.BaiduMap.OnMapRenderCallback) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.BaiduMap.OnMapRenderCallback@" + refId + "::onMapRenderFinished(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onMapRenderFinished();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolygonOptions::getFillColor", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolygonOptions ref = (com.baidu.mapapi.map.PolygonOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolygonOptions@" + refId + "::getFillColor(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getFillColor();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolygonOptions::getPoints", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolygonOptions ref = (com.baidu.mapapi.map.PolygonOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolygonOptions@" + refId + "::getPoints(" + "" + ")");
                }
            
                // invoke native method
                List<com.baidu.mapapi.model.LatLng> result;
                try {
                    result = ref.getPoints();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (result != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.baidu.mapapi.model.LatLng item : result) {
                        getHEAP().put(item.hashCode(), item);
                        jsonableResult.add(item.hashCode());
                    }
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolygonOptions::getStroke", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolygonOptions ref = (com.baidu.mapapi.map.PolygonOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolygonOptions@" + refId + "::getStroke(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.Stroke result;
                try {
                    result = ref.getStroke();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolygonOptions::fillColor", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolygonOptions ref = (com.baidu.mapapi.map.PolygonOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolygonOptions@" + refId + "::fillColor(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.PolygonOptions result;
                try {
                    result = ref.fillColor(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolygonOptions::points", (args, methodResult) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) args).get("var1");
                List<com.baidu.mapapi.model.LatLng> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    var1.add((com.baidu.mapapi.model.LatLng) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolygonOptions ref = (com.baidu.mapapi.map.PolygonOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolygonOptions@" + refId + "::points(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.PolygonOptions result;
                try {
                    result = ref.points(new ArrayList(var1));
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolygonOptions::stroke", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.Stroke var1 = (com.baidu.mapapi.map.Stroke) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolygonOptions ref = (com.baidu.mapapi.map.PolygonOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolygonOptions@" + refId + "::stroke(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.PolygonOptions result;
                try {
                    result = ref.stroke(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolygonOptions::addHoleOption", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.HoleOptions var1 = (com.baidu.mapapi.map.HoleOptions) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolygonOptions ref = (com.baidu.mapapi.map.PolygonOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolygonOptions@" + refId + "::addHoleOption(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.PolygonOptions result;
                try {
                    result = ref.addHoleOption(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolygonOptions::addHoleOptions", (args, methodResult) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) args).get("var1");
                List<com.baidu.mapapi.map.HoleOptions> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    var1.add((com.baidu.mapapi.map.HoleOptions) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolygonOptions ref = (com.baidu.mapapi.map.PolygonOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolygonOptions@" + refId + "::addHoleOptions(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.PolygonOptions result;
                try {
                    result = ref.addHoleOptions(new ArrayList(var1));
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolygonOptions::visible", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolygonOptions ref = (com.baidu.mapapi.map.PolygonOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolygonOptions@" + refId + "::visible(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.PolygonOptions result;
                try {
                    result = ref.visible(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolygonOptions::isVisible", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolygonOptions ref = (com.baidu.mapapi.map.PolygonOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolygonOptions@" + refId + "::isVisible(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isVisible();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolygonOptions::zIndex", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolygonOptions ref = (com.baidu.mapapi.map.PolygonOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolygonOptions@" + refId + "::zIndex(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.PolygonOptions result;
                try {
                    result = ref.zIndex(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolygonOptions::getZIndex", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolygonOptions ref = (com.baidu.mapapi.map.PolygonOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolygonOptions@" + refId + "::getZIndex(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getZIndex();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolygonOptions::extraInfo", (args, methodResult) -> {
                // args
                // ref arg
                android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolygonOptions ref = (com.baidu.mapapi.map.PolygonOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolygonOptions@" + refId + "::extraInfo(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.PolygonOptions result;
                try {
                    result = ref.extraInfo(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.PolygonOptions::getExtraInfo", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.PolygonOptions ref = (com.baidu.mapapi.map.PolygonOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.PolygonOptions@" + refId + "::getExtraInfo(" + "" + ")");
                }
            
                // invoke native method
                android.os.Bundle result;
                try {
                    result = ref.getExtraInfo();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.SwipeDismissView::setCallback", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.SwipeDismissView ref = (com.baidu.mapapi.map.SwipeDismissView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.SwipeDismissView@" + refId + "::setCallback(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setCallback(new com.baidu.mapapi.map.WearMapView.OnDismissCallback() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.baidu.mapapi.map.SwipeDismissView::setCallback::Callback");
            
                    // call dart method
                    @Override
                    public void onDismiss() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onDismiss(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.baidu.mapapi.map.WearMapView.OnDismissCallback::onDismiss",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onNotify() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onNotify(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.baidu.mapapi.map.WearMapView.OnDismissCallback::onNotify",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Dot::getCenter", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Dot ref = (com.baidu.mapapi.map.Dot) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Dot@" + refId + "::getCenter(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.model.LatLng result;
                try {
                    result = ref.getCenter();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Dot::getColor", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Dot ref = (com.baidu.mapapi.map.Dot) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Dot@" + refId + "::getColor(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getColor();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Dot::getRadius", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Dot ref = (com.baidu.mapapi.map.Dot) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Dot@" + refId + "::getRadius(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getRadius();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Dot::setCenter", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.model.LatLng var1 = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Dot ref = (com.baidu.mapapi.map.Dot) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Dot@" + refId + "::setCenter(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCenter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Dot::setColor", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Dot ref = (com.baidu.mapapi.map.Dot) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Dot@" + refId + "::setColor(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setColor(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Dot::setRadius", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Dot ref = (com.baidu.mapapi.map.Dot) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Dot@" + refId + "::setRadius(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRadius(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.ArcOptions::getColor", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.ArcOptions ref = (com.baidu.mapapi.map.ArcOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.ArcOptions@" + refId + "::getColor(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getColor();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.ArcOptions::getStartPoint", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.ArcOptions ref = (com.baidu.mapapi.map.ArcOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.ArcOptions@" + refId + "::getStartPoint(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.model.LatLng result;
                try {
                    result = ref.getStartPoint();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.ArcOptions::getMiddlePoint", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.ArcOptions ref = (com.baidu.mapapi.map.ArcOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.ArcOptions@" + refId + "::getMiddlePoint(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.model.LatLng result;
                try {
                    result = ref.getMiddlePoint();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.ArcOptions::getEndPoint", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.ArcOptions ref = (com.baidu.mapapi.map.ArcOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.ArcOptions@" + refId + "::getEndPoint(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.model.LatLng result;
                try {
                    result = ref.getEndPoint();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.ArcOptions::getWidth", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.ArcOptions ref = (com.baidu.mapapi.map.ArcOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.ArcOptions@" + refId + "::getWidth(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getWidth();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.ArcOptions::color", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.ArcOptions ref = (com.baidu.mapapi.map.ArcOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.ArcOptions@" + refId + "::color(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.ArcOptions result;
                try {
                    result = ref.color(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.ArcOptions::points", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.model.LatLng var1 = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
                // ref arg
                com.baidu.mapapi.model.LatLng var2 = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var2"));
                // ref arg
                com.baidu.mapapi.model.LatLng var3 = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var3"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.ArcOptions ref = (com.baidu.mapapi.map.ArcOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.ArcOptions@" + refId + "::points(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.ArcOptions result;
                try {
                    result = ref.points(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.ArcOptions::width", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.ArcOptions ref = (com.baidu.mapapi.map.ArcOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.ArcOptions@" + refId + "::width(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.ArcOptions result;
                try {
                    result = ref.width(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.ArcOptions::visible", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.ArcOptions ref = (com.baidu.mapapi.map.ArcOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.ArcOptions@" + refId + "::visible(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.ArcOptions result;
                try {
                    result = ref.visible(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.ArcOptions::isVisible", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.ArcOptions ref = (com.baidu.mapapi.map.ArcOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.ArcOptions@" + refId + "::isVisible(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isVisible();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.ArcOptions::zIndex", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.ArcOptions ref = (com.baidu.mapapi.map.ArcOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.ArcOptions@" + refId + "::zIndex(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.ArcOptions result;
                try {
                    result = ref.zIndex(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.ArcOptions::getZIndex", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.ArcOptions ref = (com.baidu.mapapi.map.ArcOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.ArcOptions@" + refId + "::getZIndex(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getZIndex();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.ArcOptions::extraInfo", (args, methodResult) -> {
                // args
                // ref arg
                android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.ArcOptions ref = (com.baidu.mapapi.map.ArcOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.ArcOptions@" + refId + "::extraInfo(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.ArcOptions result;
                try {
                    result = ref.extraInfo(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.ArcOptions::getExtraInfo", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.ArcOptions ref = (com.baidu.mapapi.map.ArcOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.ArcOptions@" + refId + "::getExtraInfo(" + "" + ")");
                }
            
                // invoke native method
                android.os.Bundle result;
                try {
                    result = ref.getExtraInfo();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.InfoWindow::getPosition", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.InfoWindow ref = (com.baidu.mapapi.map.InfoWindow) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.InfoWindow@" + refId + "::getPosition(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.model.LatLng result;
                try {
                    result = ref.getPosition();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.InfoWindow::setPosition", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.model.LatLng var1 = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.InfoWindow ref = (com.baidu.mapapi.map.InfoWindow) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.InfoWindow@" + refId + "::setPosition(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPosition(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.InfoWindow::getBitmapDescriptor", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.InfoWindow ref = (com.baidu.mapapi.map.InfoWindow) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.InfoWindow@" + refId + "::getBitmapDescriptor(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.BitmapDescriptor result;
                try {
                    result = ref.getBitmapDescriptor();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.InfoWindow::setBitmapDescriptor", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.BitmapDescriptor var1 = (com.baidu.mapapi.map.BitmapDescriptor) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.InfoWindow ref = (com.baidu.mapapi.map.InfoWindow) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.InfoWindow@" + refId + "::setBitmapDescriptor(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setBitmapDescriptor(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.InfoWindow::getView", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.InfoWindow ref = (com.baidu.mapapi.map.InfoWindow) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.InfoWindow@" + refId + "::getView(" + "" + ")");
                }
            
                // invoke native method
                android.view.View result;
                try {
                    result = ref.getView();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.InfoWindow::setView", (args, methodResult) -> {
                // args
                // ref arg
                android.view.View var1 = (android.view.View) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.InfoWindow ref = (com.baidu.mapapi.map.InfoWindow) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.InfoWindow@" + refId + "::setView(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setView(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.InfoWindow::getYOffset", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.InfoWindow ref = (com.baidu.mapapi.map.InfoWindow) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.InfoWindow@" + refId + "::getYOffset(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getYOffset();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.InfoWindow::setYOffset", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.InfoWindow ref = (com.baidu.mapapi.map.InfoWindow) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.InfoWindow@" + refId + "::setYOffset(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setYOffset(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.InfoWindow::getTag", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.InfoWindow ref = (com.baidu.mapapi.map.InfoWindow) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.InfoWindow@" + refId + "::getTag(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getTag();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.InfoWindow::setTag", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.InfoWindow ref = (com.baidu.mapapi.map.InfoWindow) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.InfoWindow@" + refId + "::setTag(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setTag(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Projection::fromScreenLocation", (args, methodResult) -> {
                // args
                // ref arg
                android.graphics.Point var1 = (android.graphics.Point) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Projection ref = (com.baidu.mapapi.map.Projection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Projection@" + refId + "::fromScreenLocation(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.model.LatLng result;
                try {
                    result = ref.fromScreenLocation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Projection::toScreenLocation", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.model.LatLng var1 = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Projection ref = (com.baidu.mapapi.map.Projection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Projection@" + refId + "::toScreenLocation(" + var1 + ")");
                }
            
                // invoke native method
                android.graphics.Point result;
                try {
                    result = ref.toScreenLocation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Projection::toOpenGLLocation", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.model.LatLng var1 = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
                // ref arg
                com.baidu.mapapi.map.MapStatus var2 = (com.baidu.mapapi.map.MapStatus) getHEAP().get((int) ((Map<String, Object>) args).get("var2"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Projection ref = (com.baidu.mapapi.map.Projection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Projection@" + refId + "::toOpenGLLocation(" + var1 + var2 + ")");
                }
            
                // invoke native method
                android.graphics.PointF result;
                try {
                    result = ref.toOpenGLLocation(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Projection::toOpenGLNormalization", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.model.LatLng var1 = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
                // ref arg
                com.baidu.mapapi.map.MapStatus var2 = (com.baidu.mapapi.map.MapStatus) getHEAP().get((int) ((Map<String, Object>) args).get("var2"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Projection ref = (com.baidu.mapapi.map.Projection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Projection@" + refId + "::toOpenGLNormalization(" + var1 + var2 + ")");
                }
            
                // invoke native method
                android.graphics.PointF result;
                try {
                    result = ref.toOpenGLNormalization(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.Projection::metersToEquatorPixels", (args, methodResult) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Projection ref = (com.baidu.mapapi.map.Projection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.Projection@" + refId + "::metersToEquatorPixels(" + var1 + ")");
                }
            
                // invoke native method
                float result;
                try {
                    result = ref.metersToEquatorPixels(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.CircleOptions::getCenter", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.CircleOptions ref = (com.baidu.mapapi.map.CircleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.CircleOptions@" + refId + "::getCenter(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.model.LatLng result;
                try {
                    result = ref.getCenter();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.CircleOptions::getFillColor", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.CircleOptions ref = (com.baidu.mapapi.map.CircleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.CircleOptions@" + refId + "::getFillColor(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getFillColor();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.CircleOptions::getRadius", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.CircleOptions ref = (com.baidu.mapapi.map.CircleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.CircleOptions@" + refId + "::getRadius(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getRadius();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.CircleOptions::getStroke", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.CircleOptions ref = (com.baidu.mapapi.map.CircleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.CircleOptions@" + refId + "::getStroke(" + "" + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.Stroke result;
                try {
                    result = ref.getStroke();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.CircleOptions::center", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.model.LatLng var1 = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.CircleOptions ref = (com.baidu.mapapi.map.CircleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.CircleOptions@" + refId + "::center(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.CircleOptions result;
                try {
                    result = ref.center(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.CircleOptions::fillColor", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.CircleOptions ref = (com.baidu.mapapi.map.CircleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.CircleOptions@" + refId + "::fillColor(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.CircleOptions result;
                try {
                    result = ref.fillColor(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.CircleOptions::radius", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.CircleOptions ref = (com.baidu.mapapi.map.CircleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.CircleOptions@" + refId + "::radius(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.CircleOptions result;
                try {
                    result = ref.radius(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.CircleOptions::stroke", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.Stroke var1 = (com.baidu.mapapi.map.Stroke) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.CircleOptions ref = (com.baidu.mapapi.map.CircleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.CircleOptions@" + refId + "::stroke(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.CircleOptions result;
                try {
                    result = ref.stroke(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.CircleOptions::dottedStroke", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.CircleOptions ref = (com.baidu.mapapi.map.CircleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.CircleOptions@" + refId + "::dottedStroke(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.CircleOptions result;
                try {
                    result = ref.dottedStroke(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.CircleOptions::dottedStrokeType", (args, methodResult) -> {
                // args
                // enum arg
                com.baidu.mapapi.map.CircleDottedStrokeType var1 = com.baidu.mapapi.map.CircleDottedStrokeType.values()[(int) ((Map<String, Object>) args).get("var1")];
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.CircleOptions ref = (com.baidu.mapapi.map.CircleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.CircleOptions@" + refId + "::dottedStrokeType(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.CircleOptions result;
                try {
                    result = ref.dottedStrokeType(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.CircleOptions::addHoleOption", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.HoleOptions var1 = (com.baidu.mapapi.map.HoleOptions) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.CircleOptions ref = (com.baidu.mapapi.map.CircleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.CircleOptions@" + refId + "::addHoleOption(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.CircleOptions result;
                try {
                    result = ref.addHoleOption(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.CircleOptions::addHoleOptions", (args, methodResult) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) args).get("var1");
                List<com.baidu.mapapi.map.HoleOptions> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    var1.add((com.baidu.mapapi.map.HoleOptions) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.CircleOptions ref = (com.baidu.mapapi.map.CircleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.CircleOptions@" + refId + "::addHoleOptions(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.CircleOptions result;
                try {
                    result = ref.addHoleOptions(new ArrayList(var1));
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.CircleOptions::visible", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.CircleOptions ref = (com.baidu.mapapi.map.CircleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.CircleOptions@" + refId + "::visible(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.CircleOptions result;
                try {
                    result = ref.visible(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.CircleOptions::isVisible", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.CircleOptions ref = (com.baidu.mapapi.map.CircleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.CircleOptions@" + refId + "::isVisible(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isVisible();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.CircleOptions::zIndex", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.CircleOptions ref = (com.baidu.mapapi.map.CircleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.CircleOptions@" + refId + "::zIndex(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.CircleOptions result;
                try {
                    result = ref.zIndex(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.CircleOptions::getZIndex", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.CircleOptions ref = (com.baidu.mapapi.map.CircleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.CircleOptions@" + refId + "::getZIndex(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getZIndex();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.CircleOptions::extraInfo", (args, methodResult) -> {
                // args
                // ref arg
                android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.CircleOptions ref = (com.baidu.mapapi.map.CircleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.CircleOptions@" + refId + "::extraInfo(" + var1 + ")");
                }
            
                // invoke native method
                com.baidu.mapapi.map.CircleOptions result;
                try {
                    result = ref.extraInfo(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.CircleOptions::getExtraInfo", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.CircleOptions ref = (com.baidu.mapapi.map.CircleOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.CircleOptions@" + refId + "::getExtraInfo(" + "" + ")");
                }
            
                // invoke native method
                android.os.Bundle result;
                try {
                    result = ref.getExtraInfo();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.BaiduMap.OnMarkerDragListener::onMarkerDrag", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.Marker var1 = (com.baidu.mapapi.map.Marker) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.BaiduMap.OnMarkerDragListener ref = (com.baidu.mapapi.map.BaiduMap.OnMarkerDragListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.BaiduMap.OnMarkerDragListener@" + refId + "::onMarkerDrag(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onMarkerDrag(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.BaiduMap.OnMarkerDragListener::onMarkerDragEnd", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.Marker var1 = (com.baidu.mapapi.map.Marker) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.BaiduMap.OnMarkerDragListener ref = (com.baidu.mapapi.map.BaiduMap.OnMarkerDragListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.BaiduMap.OnMarkerDragListener@" + refId + "::onMarkerDragEnd(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onMarkerDragEnd(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.BaiduMap.OnMarkerDragListener::onMarkerDragStart", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.map.Marker var1 = (com.baidu.mapapi.map.Marker) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.BaiduMap.OnMarkerDragListener ref = (com.baidu.mapapi.map.BaiduMap.OnMarkerDragListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.BaiduMap.OnMarkerDragListener@" + refId + "::onMarkerDragStart(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onMarkerDragStart(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.BaiduMap.OnMapLongClickListener::onMapLongClick", (args, methodResult) -> {
                // args
                // ref arg
                com.baidu.mapapi.model.LatLng var1 = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.BaiduMap.OnMapLongClickListener ref = (com.baidu.mapapi.map.BaiduMap.OnMapLongClickListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.BaiduMap.OnMapLongClickListener@" + refId + "::onMapLongClick(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onMapLongClick(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MapBaseIndoorMapInfo::getID", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MapBaseIndoorMapInfo ref = (com.baidu.mapapi.map.MapBaseIndoorMapInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MapBaseIndoorMapInfo@" + refId + "::getID(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getID();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.baidu.mapapi.map.MapBaseIndoorMapInfo::getCurFloor", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MapBaseIndoorMapInfo ref = (com.baidu.mapapi.map.MapBaseIndoorMapInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.MapBaseIndoorMapInfo@" + refId + "::getCurFloor(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getCurFloor();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
        }};
    }
}
