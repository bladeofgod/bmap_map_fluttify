//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package com.fluttify.bmap_map_fluttify;

import android.content.Context;
import android.view.View;
import android.util.Log;
import android.app.Activity;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.common.StandardMessageCodec;
import io.flutter.plugin.platform.PlatformView;
import io.flutter.plugin.platform.PlatformViewFactory;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;

@SuppressWarnings("ALL")
class WearMapViewFactory extends PlatformViewFactory {

    WearMapViewFactory(BinaryMessenger messenger, Activity activity) {
        super(StandardMessageCodec.INSTANCE);

        this.messenger = messenger;
        this.activity = activity;

        new MethodChannel(messenger, "com.fluttify/bmap_map_fluttify/com_baidu_mapapi_map_WearMapView").setMethodCallHandler((methodCall, methodResult) -> {
                    Map<String, Object> args = (Map<String, Object>) methodCall.arguments;
                    BmapMapFluttifyPlugin.Handler handler = handlerMap.get(methodCall.method);
                    if (handler != null) {
                        try {
                            handler.call(args, methodResult);
                        } catch (Exception e) {
                            e.printStackTrace();
                            methodResult.error(e.getMessage(), null, null);
                        }
                    } else {
                        methodResult.notImplemented();
                    }
                });
    }

    private BinaryMessenger messenger;
    private Activity activity;

    private final Map<String, BmapMapFluttifyPlugin.Handler> handlerMap = new HashMap<String, BmapMapFluttifyPlugin.Handler>() {{
        // method
        put("com.baidu.mapapi.map.WearMapView::setOnDismissCallbackListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::setOnDismissCallbackListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnDismissCallbackListener(new com.baidu.mapapi.map.WearMapView.OnDismissCallback() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.baidu.mapapi.map.WearMapView::setOnDismissCallbackListener::Callback");
        
                // call dart method
                @Override
                public void onDismiss() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onDismiss(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.baidu.mapapi.map.WearMapView.OnDismissCallback::onDismiss",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onNotify() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onNotify(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.baidu.mapapi.map.WearMapView.OnDismissCallback::onNotify",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            String jsonableResult = "success";
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::setShape", (args, methodResult) -> {
            // args
            // enum arg
            com.baidu.mapapi.map.WearMapView.ScreenShape var1 = com.baidu.mapapi.map.WearMapView.ScreenShape.values()[(int) ((Map<String, Object>) args).get("var1")];
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::setShape(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setShape(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            String jsonableResult = "success";
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::setCustomStyleFilePathAndMode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) ((Map<String, Object>) args).get("var1");
            // jsonable arg
            int var2 = (int) ((Map<String, Object>) args).get("var2");
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::setCustomStyleFilePathAndMode(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.setCustomStyleFilePathAndMode(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            String jsonableResult = "success";
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::setMapCustomStylePath", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) ((Map<String, Object>) args).get("var1");
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::setMapCustomStylePath(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setMapCustomStylePath(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            String jsonableResult = "success";
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::setMapCustomStyle", (args, methodResult) -> {
            // args
            // ref arg
            com.baidu.mapapi.map.MapCustomStyleOptions var1 = (com.baidu.mapapi.map.MapCustomStyleOptions) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::setMapCustomStyle(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setMapCustomStyle(var1, new com.baidu.mapapi.map.MapView.CustomMapStyleCallBack() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.baidu.mapapi.map.WearMapView::setMapCustomStyle::Callback");
        
                // call dart method
                @Override
                public boolean onPreLoadLastCustomMapStyle(String var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onPreLoadLastCustomMapStyle(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    String argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.baidu.mapapi.map.MapView.CustomMapStyleCallBack::onPreLoadLastCustomMapStyle",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
                    return true;
                }
        
                @Override
                public boolean onCustomMapStyleLoadSuccess(boolean var1, String var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onCustomMapStyleLoadSuccess(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    boolean argvar1 = var1;
                    // jsonable arg
                    String argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.baidu.mapapi.map.MapView.CustomMapStyleCallBack::onCustomMapStyleLoadSuccess",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
                    return true;
                }
        
                @Override
                public boolean onCustomMapStyleLoadFailed(int var1, String var2, String var3) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onCustomMapStyleLoadFailed(" + var1 + var2 + var3 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // jsonable arg
                    String argvar2 = var2;
                    // jsonable arg
                    String argvar3 = var3;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.baidu.mapapi.map.MapView.CustomMapStyleCallBack::onCustomMapStyleLoadFailed",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                                put("var3", argvar3);
                            }}
                    );
        
                    // method result
                    return true;
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            String jsonableResult = "success";
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::setMapCustomStyleEnable", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::setMapCustomStyleEnable(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setMapCustomStyleEnable(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            String jsonableResult = "success";
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::onInterceptTouchEvent", (args, methodResult) -> {
            // args
            // ref arg
            android.view.MotionEvent var1 = (android.view.MotionEvent) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::onInterceptTouchEvent(" + var1 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.onInterceptTouchEvent(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            boolean jsonableResult = result;
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::setViewAnimitionEnable", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::setViewAnimitionEnable(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setViewAnimitionEnable(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            String jsonableResult = "success";
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::getMap", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::getMap(" + "" + ")");
            }
        
            // invoke native method
            com.baidu.mapapi.map.BaiduMap result;
            try {
                result = ref.getMap();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            Integer jsonableResult = null;
            if (result != null) {
                jsonableResult = result.hashCode();
                getHEAP().put(jsonableResult, result);
            }
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::onDestroy", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::onDestroy(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onDestroy();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            String jsonableResult = "success";
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::onDismiss", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::onDismiss(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onDismiss();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            String jsonableResult = "success";
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::onEnterAmbient", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::onEnterAmbient(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onEnterAmbient(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            String jsonableResult = "success";
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::onExitAmbient", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::onExitAmbient(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onExitAmbient();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            String jsonableResult = "success";
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::getMapLevel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::getMapLevel(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getMapLevel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            int jsonableResult = result;
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::setPadding", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) ((Map<String, Object>) args).get("var1");
            // jsonable arg
            int var2 = (int) ((Map<String, Object>) args).get("var2");
            // jsonable arg
            int var3 = (int) ((Map<String, Object>) args).get("var3");
            // jsonable arg
            int var4 = (int) ((Map<String, Object>) args).get("var4");
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::setPadding(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            try {
                ref.setPadding(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            String jsonableResult = "success";
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::showZoomControls", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::showZoomControls(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.showZoomControls(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            String jsonableResult = "success";
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::setZoomControlsPosition", (args, methodResult) -> {
            // args
            // ref arg
            android.graphics.Point var1 = (android.graphics.Point) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::setZoomControlsPosition(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setZoomControlsPosition(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            String jsonableResult = "success";
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::showScaleControl", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::showScaleControl(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.showScaleControl(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            String jsonableResult = "success";
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::getScaleControlViewWidth", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::getScaleControlViewWidth(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getScaleControlViewWidth();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            int jsonableResult = result;
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::getScaleControlViewHeight", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::getScaleControlViewHeight(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getScaleControlViewHeight();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            int jsonableResult = result;
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::setScaleControlPosition", (args, methodResult) -> {
            // args
            // ref arg
            android.graphics.Point var1 = (android.graphics.Point) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::setScaleControlPosition(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setScaleControlPosition(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            String jsonableResult = "success";
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::onSaveInstanceState", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::onSaveInstanceState(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onSaveInstanceState(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            String jsonableResult = "success";
        
            methodResult.success(jsonableResult);
        });
        // method
        put("com.baidu.mapapi.map.WearMapView::onCreate", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            // ref arg
            android.os.Bundle var2 = (android.os.Bundle) getHEAP().get((int) ((Map<String, Object>) args).get("var2"));
        
            // ref
            int refId = (int) ((Map<String, Object>) args).get("refId");
            com.baidu.mapapi.map.WearMapView ref = (com.baidu.mapapi.map.WearMapView) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.baidu.mapapi.map.WearMapView@" + refId + "::onCreate(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onCreate(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // convert result to jsonable result
            String jsonableResult = "success";
        
            methodResult.success(jsonableResult);
        });
    }};

    @Override
    public PlatformView create(Context context, int id, Object params) {
        Map<String, Object> args = (Map<String, Object>) params;
        // ref arg
        com.baidu.mapapi.map.BaiduMapOptions var2 = (com.baidu.mapapi.map.BaiduMapOptions) getHEAP().get((int) ((Map<String, Object>) args).get("var2"));

        com.baidu.mapapi.map.WearMapView view = new com.baidu.mapapi.map.WearMapView(activity, var2);
        getHEAP().put(id, view);
        return new PlatformView() {

            // add to HEAP
            @Override
            public View getView() {
                return view;
            }

            @Override
            public void dispose() {}
        };
    }
}
