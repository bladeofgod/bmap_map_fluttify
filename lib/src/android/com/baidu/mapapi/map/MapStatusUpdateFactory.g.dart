// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_map_fluttify/src/ios/ios.export.g.dart';
import 'package:bmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';

class com_baidu_mapapi_map_MapStatusUpdateFactory extends java_lang_Object  {
  //region constants
  
  //endregion

  //region creators
  
  //endregion

  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  static Future<com_baidu_mapapi_map_MapStatusUpdate> newMapStatus(com_baidu_mapapi_map_MapStatus var0) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapStatusUpdateFactory::newMapStatus([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::newMapStatus', {"var0": var0.refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  static Future<com_baidu_mapapi_map_MapStatusUpdate> newLatLng(com_baidu_mapapi_model_LatLng var0) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapStatusUpdateFactory::newLatLng([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::newLatLng', {"var0": var0.refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  static Future<com_baidu_mapapi_map_MapStatusUpdate> newLatLngBounds__com_baidu_mapapi_model_LatLngBounds(com_baidu_mapapi_model_LatLngBounds var0) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapStatusUpdateFactory::newLatLngBounds([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::newLatLngBounds__com_baidu_mapapi_model_LatLngBounds', {"var0": var0.refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  static Future<com_baidu_mapapi_map_MapStatusUpdate> newLatLngBounds__com_baidu_mapapi_model_LatLngBounds__int__int(com_baidu_mapapi_model_LatLngBounds var0, int var1, int var2) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapStatusUpdateFactory::newLatLngBounds([\'var1\':$var1, \'var2\':$var2])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::newLatLngBounds__com_baidu_mapapi_model_LatLngBounds__int__int', {"var0": var0.refId, "var1": var1, "var2": var2});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  static Future<com_baidu_mapapi_map_MapStatusUpdate> newLatLngZoom__com_baidu_mapapi_model_LatLng__double(com_baidu_mapapi_model_LatLng var0, double var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapStatusUpdateFactory::newLatLngZoom([\'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::newLatLngZoom__com_baidu_mapapi_model_LatLng__double', {"var0": var0.refId, "var1": var1});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  static Future<com_baidu_mapapi_map_MapStatusUpdate> scrollBy(int var0, int var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapStatusUpdateFactory::scrollBy([\'var0\':$var0, \'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::scrollBy', {"var0": var0, "var1": var1});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  static Future<com_baidu_mapapi_map_MapStatusUpdate> zoomBy__double(double var0) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapStatusUpdateFactory::zoomBy([\'var0\':$var0])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::zoomBy__double', {"var0": var0});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  static Future<com_baidu_mapapi_map_MapStatusUpdate> zoomBy__double__android_graphics_Point(double var0, android_graphics_Point var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapStatusUpdateFactory::zoomBy([\'var0\':$var0])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::zoomBy__double__android_graphics_Point', {"var0": var0, "var1": var1.refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  static Future<com_baidu_mapapi_map_MapStatusUpdate> zoomIn() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapStatusUpdateFactory::zoomIn([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::zoomIn', );
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  static Future<com_baidu_mapapi_map_MapStatusUpdate> zoomOut() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapStatusUpdateFactory::zoomOut([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::zoomOut', );
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  static Future<com_baidu_mapapi_map_MapStatusUpdate> zoomTo(double var0) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapStatusUpdateFactory::zoomTo([\'var0\':$var0])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::zoomTo', {"var0": var0});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  static Future<com_baidu_mapapi_map_MapStatusUpdate> newLatLngBounds__com_baidu_mapapi_model_LatLngBounds__int__int__int__int(com_baidu_mapapi_model_LatLngBounds var0, int var1, int var2, int var3, int var4) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapStatusUpdateFactory::newLatLngBounds([\'var1\':$var1, \'var2\':$var2, \'var3\':$var3, \'var4\':$var4])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::newLatLngBounds__com_baidu_mapapi_model_LatLngBounds__int__int__int__int', {"var0": var0.refId, "var1": var1, "var2": var2, "var3": var3, "var4": var4});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  static Future<com_baidu_mapapi_map_MapStatusUpdate> newLatLngZoom__com_baidu_mapapi_model_LatLngBounds__int__int__int__int(com_baidu_mapapi_model_LatLngBounds var0, int var1, int var2, int var3, int var4) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapStatusUpdateFactory::newLatLngZoom([\'var1\':$var1, \'var2\':$var2, \'var3\':$var3, \'var4\':$var4])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::newLatLngZoom__com_baidu_mapapi_model_LatLngBounds__int__int__int__int', {"var0": var0.refId, "var1": var1, "var2": var2, "var3": var3, "var4": var4});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  //endregion
}

extension com_baidu_mapapi_map_MapStatusUpdateFactory_Batch on List<com_baidu_mapapi_map_MapStatusUpdateFactory> {
  //region getters
  
  //endregion

  //region methods
  Future<List<com_baidu_mapapi_map_MapStatusUpdate>> newMapStatus_batch(List<com_baidu_mapapi_map_MapStatus> var0) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::newMapStatus_batch', [for (int i = 0; i < this.length; i++) {"var0": var0[i].refId, "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<com_baidu_mapapi_map_MapStatusUpdate>> newLatLng_batch(List<com_baidu_mapapi_model_LatLng> var0) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::newLatLng_batch', [for (int i = 0; i < this.length; i++) {"var0": var0[i].refId, "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<com_baidu_mapapi_map_MapStatusUpdate>> newLatLngBounds__com_baidu_mapapi_model_LatLngBounds_batch(List<com_baidu_mapapi_model_LatLngBounds> var0) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::newLatLngBounds__com_baidu_mapapi_model_LatLngBounds_batch', [for (int i = 0; i < this.length; i++) {"var0": var0[i].refId, "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<com_baidu_mapapi_map_MapStatusUpdate>> newLatLngBounds__com_baidu_mapapi_model_LatLngBounds__int__int_batch(List<com_baidu_mapapi_model_LatLngBounds> var0, List<int> var1, List<int> var2) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::newLatLngBounds__com_baidu_mapapi_model_LatLngBounds__int__int_batch', [for (int i = 0; i < this.length; i++) {"var0": var0[i].refId, "var1": var1[i], "var2": var2[i], "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<com_baidu_mapapi_map_MapStatusUpdate>> newLatLngZoom__com_baidu_mapapi_model_LatLng__double_batch(List<com_baidu_mapapi_model_LatLng> var0, List<double> var1) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::newLatLngZoom__com_baidu_mapapi_model_LatLng__double_batch', [for (int i = 0; i < this.length; i++) {"var0": var0[i].refId, "var1": var1[i], "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<com_baidu_mapapi_map_MapStatusUpdate>> scrollBy_batch(List<int> var0, List<int> var1) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::scrollBy_batch', [for (int i = 0; i < this.length; i++) {"var0": var0[i], "var1": var1[i], "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<com_baidu_mapapi_map_MapStatusUpdate>> zoomBy__double_batch(List<double> var0) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::zoomBy__double_batch', [for (int i = 0; i < this.length; i++) {"var0": var0[i], "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<com_baidu_mapapi_map_MapStatusUpdate>> zoomBy__double__android_graphics_Point_batch(List<double> var0, List<android_graphics_Point> var1) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::zoomBy__double__android_graphics_Point_batch', [for (int i = 0; i < this.length; i++) {"var0": var0[i], "var1": var1[i].refId, "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<com_baidu_mapapi_map_MapStatusUpdate>> zoomIn_batch() async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::zoomIn_batch', [for (int i = 0; i < this.length; i++) {"refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<com_baidu_mapapi_map_MapStatusUpdate>> zoomOut_batch() async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::zoomOut_batch', [for (int i = 0; i < this.length; i++) {"refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<com_baidu_mapapi_map_MapStatusUpdate>> zoomTo_batch(List<double> var0) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::zoomTo_batch', [for (int i = 0; i < this.length; i++) {"var0": var0[i], "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<com_baidu_mapapi_map_MapStatusUpdate>> newLatLngBounds__com_baidu_mapapi_model_LatLngBounds__int__int__int__int_batch(List<com_baidu_mapapi_model_LatLngBounds> var0, List<int> var1, List<int> var2, List<int> var3, List<int> var4) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::newLatLngBounds__com_baidu_mapapi_model_LatLngBounds__int__int__int__int_batch', [for (int i = 0; i < this.length; i++) {"var0": var0[i].refId, "var1": var1[i], "var2": var2[i], "var3": var3[i], "var4": var4[i], "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<com_baidu_mapapi_map_MapStatusUpdate>> newLatLngZoom__com_baidu_mapapi_model_LatLngBounds__int__int__int__int_batch(List<com_baidu_mapapi_model_LatLngBounds> var0, List<int> var1, List<int> var2, List<int> var3, List<int> var4) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapStatusUpdateFactory::newLatLngZoom__com_baidu_mapapi_model_LatLngBounds__int__int__int__int_batch', [for (int i = 0; i < this.length; i++) {"var0": var0[i].refId, "var1": var1[i], "var2": var2[i], "var3": var3[i], "var4": var4[i], "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapStatusUpdate()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  //endregion
}