// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:io';

import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';
import 'package:bmap_map_fluttify/src/android/android.export.g.dart';
import 'package:bmap_map_fluttify/src/ios/ios.export.g.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
extension TypeOpBmapMapFluttifyIOS on Ref {
  Future<bool> isBMKActionPaopaoView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKActionPaopaoView', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKTileLayerView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKTileLayerView', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKOverlayPathView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKOverlayPathView', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKGroundOverlay() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKGroundOverlay', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKPolyline() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKPolyline', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKCircleView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKCircleView', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKPointAnnotation() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKPointAnnotation', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKGradient() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKGradient', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKArcline() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKArcline', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKMultiPoint() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKMultiPoint', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKBaseIndoorMapInfo() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKBaseIndoorMapInfo', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKTileLayer() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKTileLayer', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKURLTileLayer() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKURLTileLayer', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKSyncTileLayer() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKSyncTileLayer', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKAsyncTileLayer() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKAsyncTileLayer', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKPolylineView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKPolylineView', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKPinAnnotationView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKPinAnnotationView', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKCircle() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKCircle', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKMapPoi() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKMapPoi', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKMapView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKMapView', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKLocationViewDisplayParam() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKLocationViewDisplayParam', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKMapStatus() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKMapStatus', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKArclineView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKArclineView', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKHeatMapNode() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKHeatMapNode', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKHeatMap() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKHeatMap', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKPolygon() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKPolygon', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKPolygonView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKPolygonView', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKOverlayView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKOverlayView', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKGroundOverlayView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKGroundOverlayView', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKAnnotationView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKAnnotationView', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKOverlayGLBasicView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKOverlayGLBasicView', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKShape() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKShape', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKOLSearchRecord() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKOLSearchRecord', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKOLUpdateElement() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKOLUpdateElement', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKCustomMapStyleOption() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKCustomMapStyleOption', {'refId': refId});
    return result;
  }
  
  Future<bool> isBMKOfflineMap() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::isKindOfBMKOfflineMap', {'refId': refId});
    return result;
  }
  

  Future<BMKActionPaopaoView> asBMKActionPaopaoView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKActionPaopaoView', {'refId': refId});
    return BMKActionPaopaoView()..refId = result;
  }
  
  Future<BMKTileLayerView> asBMKTileLayerView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKTileLayerView', {'refId': refId});
    return BMKTileLayerView()..refId = result;
  }
  
  Future<BMKOverlayPathView> asBMKOverlayPathView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKOverlayPathView', {'refId': refId});
    return BMKOverlayPathView()..refId = result;
  }
  
  Future<BMKGroundOverlay> asBMKGroundOverlay() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKGroundOverlay', {'refId': refId});
    return BMKGroundOverlay()..refId = result;
  }
  
  Future<BMKPolyline> asBMKPolyline() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKPolyline', {'refId': refId});
    return BMKPolyline()..refId = result;
  }
  
  Future<BMKCircleView> asBMKCircleView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKCircleView', {'refId': refId});
    return BMKCircleView()..refId = result;
  }
  
  Future<BMKPointAnnotation> asBMKPointAnnotation() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKPointAnnotation', {'refId': refId});
    return BMKPointAnnotation()..refId = result;
  }
  
  Future<BMKGradient> asBMKGradient() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKGradient', {'refId': refId});
    return BMKGradient()..refId = result;
  }
  
  Future<BMKArcline> asBMKArcline() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKArcline', {'refId': refId});
    return BMKArcline()..refId = result;
  }
  
  Future<BMKMultiPoint> asBMKMultiPoint() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKMultiPoint', {'refId': refId});
    return BMKMultiPoint()..refId = result;
  }
  
  Future<BMKBaseIndoorMapInfo> asBMKBaseIndoorMapInfo() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKBaseIndoorMapInfo', {'refId': refId});
    return BMKBaseIndoorMapInfo()..refId = result;
  }
  
  Future<BMKTileLayer> asBMKTileLayer() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKTileLayer', {'refId': refId});
    return BMKTileLayer()..refId = result;
  }
  
  Future<BMKURLTileLayer> asBMKURLTileLayer() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKURLTileLayer', {'refId': refId});
    return BMKURLTileLayer()..refId = result;
  }
  
  Future<BMKSyncTileLayer> asBMKSyncTileLayer() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKSyncTileLayer', {'refId': refId});
    return BMKSyncTileLayer()..refId = result;
  }
  
  Future<BMKAsyncTileLayer> asBMKAsyncTileLayer() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKAsyncTileLayer', {'refId': refId});
    return BMKAsyncTileLayer()..refId = result;
  }
  
  Future<BMKPolylineView> asBMKPolylineView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKPolylineView', {'refId': refId});
    return BMKPolylineView()..refId = result;
  }
  
  Future<BMKPinAnnotationView> asBMKPinAnnotationView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKPinAnnotationView', {'refId': refId});
    return BMKPinAnnotationView()..refId = result;
  }
  
  Future<BMKCircle> asBMKCircle() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKCircle', {'refId': refId});
    return BMKCircle()..refId = result;
  }
  
  Future<BMKMapPoi> asBMKMapPoi() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKMapPoi', {'refId': refId});
    return BMKMapPoi()..refId = result;
  }
  
  Future<BMKMapView> asBMKMapView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKMapView', {'refId': refId});
    return BMKMapView()..refId = result;
  }
  
  Future<BMKLocationViewDisplayParam> asBMKLocationViewDisplayParam() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKLocationViewDisplayParam', {'refId': refId});
    return BMKLocationViewDisplayParam()..refId = result;
  }
  
  Future<BMKMapStatus> asBMKMapStatus() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKMapStatus', {'refId': refId});
    return BMKMapStatus()..refId = result;
  }
  
  Future<BMKArclineView> asBMKArclineView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKArclineView', {'refId': refId});
    return BMKArclineView()..refId = result;
  }
  
  Future<BMKHeatMapNode> asBMKHeatMapNode() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKHeatMapNode', {'refId': refId});
    return BMKHeatMapNode()..refId = result;
  }
  
  Future<BMKHeatMap> asBMKHeatMap() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKHeatMap', {'refId': refId});
    return BMKHeatMap()..refId = result;
  }
  
  Future<BMKPolygon> asBMKPolygon() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKPolygon', {'refId': refId});
    return BMKPolygon()..refId = result;
  }
  
  Future<BMKPolygonView> asBMKPolygonView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKPolygonView', {'refId': refId});
    return BMKPolygonView()..refId = result;
  }
  
  Future<BMKOverlayView> asBMKOverlayView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKOverlayView', {'refId': refId});
    return BMKOverlayView()..refId = result;
  }
  
  Future<BMKGroundOverlayView> asBMKGroundOverlayView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKGroundOverlayView', {'refId': refId});
    return BMKGroundOverlayView()..refId = result;
  }
  
  Future<BMKAnnotationView> asBMKAnnotationView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKAnnotationView', {'refId': refId});
    return BMKAnnotationView()..refId = result;
  }
  
  Future<BMKOverlayGLBasicView> asBMKOverlayGLBasicView() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKOverlayGLBasicView', {'refId': refId});
    return BMKOverlayGLBasicView()..refId = result;
  }
  
  Future<BMKShape> asBMKShape() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKShape', {'refId': refId});
    return BMKShape()..refId = result;
  }
  
  Future<BMKOLSearchRecord> asBMKOLSearchRecord() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKOLSearchRecord', {'refId': refId});
    return BMKOLSearchRecord()..refId = result;
  }
  
  Future<BMKOLUpdateElement> asBMKOLUpdateElement() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKOLUpdateElement', {'refId': refId});
    return BMKOLUpdateElement()..refId = result;
  }
  
  Future<BMKCustomMapStyleOption> asBMKCustomMapStyleOption() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKCustomMapStyleOption', {'refId': refId});
    return BMKCustomMapStyleOption()..refId = result;
  }
  
  Future<BMKOfflineMap> asBMKOfflineMap() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('RefClass::asBMKOfflineMap', {'refId': refId});
    return BMKOfflineMap()..refId = result;
  }
  
}