// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_map_fluttify/src/ios/ios.export.g.dart';
import 'package:bmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';

class mapsdkvi_com_gdi_bgl_android_java_EnvDrawText extends java_lang_Object  {
  //region constants
  
  //endregion

  //region creators
  static Future<mapsdkvi_com_gdi_bgl_android_java_EnvDrawText> create__() async {
    final int refId = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('ObjectFactory::createmapsdkvi_com_gdi_bgl_android_java_EnvDrawText__');
    final object = mapsdkvi_com_gdi_bgl_android_java_EnvDrawText()..refId = refId..tag = 'bmap_map_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  static Future<List<mapsdkvi_com_gdi_bgl_android_java_EnvDrawText>> create_batch__(int length) async {
    // if (#__check_param_size__#) {
    //   return Future.error('all args must has same length!');
    // }
    final List resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('ObjectFactory::create_batchmapsdkvi_com_gdi_bgl_android_java_EnvDrawText__', {'length': length});
  
    final List<mapsdkvi_com_gdi_bgl_android_java_EnvDrawText> typedResult = resultBatch.map((result) => mapsdkvi_com_gdi_bgl_android_java_EnvDrawText()..refId = result..tag = 'bmap_map_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  //endregion

  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  static Future<Int32List> drawText(String var0, int var1, int var2, Int32List var3, int var4, int var5, int var6, int var7, int var8) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: mapsdkvi.com.gdi.bgl.android.java.EnvDrawText::drawText([\'var0\':$var0, \'var1\':$var1, \'var2\':$var2, \'var3\':$var3, \'var4\':$var4, \'var5\':$var5, \'var6\':$var6, \'var7\':$var7, \'var8\':$var8])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('mapsdkvi.com.gdi.bgl.android.java.EnvDrawText::drawText', {"var0": var0, "var1": var1, "var2": var2, "var3": var3, "var4": var4, "var5": var5, "var6": var6, "var7": var7, "var8": var8});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return (result as List).cast<int>();
    }
  }
  
  static Future<android_graphics_Bitmap> drawTextExt(String var0, int var1, int var2, Int32List var3, int var4, int var5, int var6, int var7, int var8) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: mapsdkvi.com.gdi.bgl.android.java.EnvDrawText::drawTextExt([\'var0\':$var0, \'var1\':$var1, \'var2\':$var2, \'var3\':$var3, \'var4\':$var4, \'var5\':$var5, \'var6\':$var6, \'var7\':$var7, \'var8\':$var8])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('mapsdkvi.com.gdi.bgl.android.java.EnvDrawText::drawTextExt', {"var0": var0, "var1": var1, "var2": var2, "var3": var3, "var4": var4, "var5": var5, "var6": var6, "var7": var7, "var8": var8});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(android_graphics_Bitmap()..refId = result..tag = 'bmap_map_fluttify');
      return android_graphics_Bitmap()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  static Future<Float64List> getTextSizeExt(String var0, int var1, int var2) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: mapsdkvi.com.gdi.bgl.android.java.EnvDrawText::getTextSizeExt([\'var0\':$var0, \'var1\':$var1, \'var2\':$var2])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('mapsdkvi.com.gdi.bgl.android.java.EnvDrawText::getTextSizeExt', {"var0": var0, "var1": var1, "var2": var2});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return (result as List).cast<double>();
    }
  }
  
  static Future<android_graphics_Bitmap> drawTextAlpha(String var0, int var1, int var2, int var3) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: mapsdkvi.com.gdi.bgl.android.java.EnvDrawText::drawTextAlpha([\'var0\':$var0, \'var1\':$var1, \'var2\':$var2, \'var3\':$var3])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('mapsdkvi.com.gdi.bgl.android.java.EnvDrawText::drawTextAlpha', {"var0": var0, "var1": var1, "var2": var2, "var3": var3});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(android_graphics_Bitmap()..refId = result..tag = 'bmap_map_fluttify');
      return android_graphics_Bitmap()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  static Future<void> removeFontCache(int var0) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: mapsdkvi.com.gdi.bgl.android.java.EnvDrawText::removeFontCache([\'var0\':$var0])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('mapsdkvi.com.gdi.bgl.android.java.EnvDrawText::removeFontCache', {"var0": var0});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  //endregion
}

extension mapsdkvi_com_gdi_bgl_android_java_EnvDrawText_Batch on List<mapsdkvi_com_gdi_bgl_android_java_EnvDrawText> {
  //region getters
  
  //endregion

  //region methods
  Future<List<Int32List>> drawText_batch(List<String> var0, List<int> var1, List<int> var2, List<Int32List> var3, List<int> var4, List<int> var5, List<int> var6, List<int> var7, List<int> var8) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('mapsdkvi.com.gdi.bgl.android.java.EnvDrawText::drawText_batch', [for (int i = 0; i < this.length; i++) {"var0": var0[i], "var1": var1[i], "var2": var2[i], "var3": var3[i], "var4": var4[i], "var5": var5[i], "var6": var6[i], "var7": var7[i], "var8": var8[i], "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => (result as List).cast<int>()).toList();
    
      return typedResult;
    }
  }
  
  Future<List<android_graphics_Bitmap>> drawTextExt_batch(List<String> var0, List<int> var1, List<int> var2, List<Int32List> var3, List<int> var4, List<int> var5, List<int> var6, List<int> var7, List<int> var8) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('mapsdkvi.com.gdi.bgl.android.java.EnvDrawText::drawTextExt_batch', [for (int i = 0; i < this.length; i++) {"var0": var0[i], "var1": var1[i], "var2": var2[i], "var3": var3[i], "var4": var4[i], "var5": var5[i], "var6": var6[i], "var7": var7[i], "var8": var8[i], "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => android_graphics_Bitmap()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<Float64List>> getTextSizeExt_batch(List<String> var0, List<int> var1, List<int> var2) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('mapsdkvi.com.gdi.bgl.android.java.EnvDrawText::getTextSizeExt_batch', [for (int i = 0; i < this.length; i++) {"var0": var0[i], "var1": var1[i], "var2": var2[i], "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => (result as List).cast<double>()).toList();
    
      return typedResult;
    }
  }
  
  Future<List<android_graphics_Bitmap>> drawTextAlpha_batch(List<String> var0, List<int> var1, List<int> var2, List<int> var3) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('mapsdkvi.com.gdi.bgl.android.java.EnvDrawText::drawTextAlpha_batch', [for (int i = 0; i < this.length; i++) {"var0": var0[i], "var1": var1[i], "var2": var2[i], "var3": var3[i], "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => android_graphics_Bitmap()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<void> removeFontCache_batch(List<int> var0) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('mapsdkvi.com.gdi.bgl.android.java.EnvDrawText::removeFontCache_batch', [for (int i = 0; i < this.length; i++) {"var0": var0[i], "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => result).toList();
    
      return typedResult;
    }
  }
  
  //endregion
}