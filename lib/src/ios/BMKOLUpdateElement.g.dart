// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_map_fluttify/src/ios/ios.export.g.dart';
import 'package:bmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';

class BMKOLUpdateElement extends NSObject  {
  //region constants
  
  //endregion

  //region creators
  static Future<BMKOLUpdateElement> create__() async {
    final int refId = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('ObjectFactory::createBMKOLUpdateElement');
    final object = BMKOLUpdateElement()..refId = refId..tag = 'bmap_map_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  static Future<List<BMKOLUpdateElement>> create_batch__(int length) async {
    // if (#__check_param_size__#) {
    //   return Future.error('all args must has same length!');
    // }
    final List resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('ObjectFactory::create_batchBMKOLUpdateElement', {'length': length});
  
    final List<BMKOLUpdateElement> typedResult = resultBatch.map((result) => BMKOLUpdateElement()..refId = result..tag = 'bmap_map_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  //endregion

  //region getters
  Future<String> get_cityName() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_cityName", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_cityID() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_cityID", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_ratio() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_ratio", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_status() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_status", {'refId': refId});
  
    return result;
  }
  
  Future<bool> get_update() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_update", {'refId': refId});
  
    return result;
  }
  
  Future<CLLocationCoordinate2D> get_pt() async {
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_pt", {'refId': refId});
    kNativeObjectPool.add(CLLocationCoordinate2D()..refId = result..tag = 'bmap_map_fluttify');
    return CLLocationCoordinate2D()..refId = result..tag = 'bmap_map_fluttify';
  }
  
  //endregion

  //region setters
  Future<void> set_cityName(String cityName) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_cityName', {'refId': refId, "cityName": cityName});
  
  
  }
  
  Future<void> set_cityID(int cityID) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_cityID', {'refId': refId, "cityID": cityID});
  
  
  }
  
  Future<void> set_ratio(int ratio) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_ratio', {'refId': refId, "ratio": ratio});
  
  
  }
  
  Future<void> set_status(int status) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_status', {'refId': refId, "status": status});
  
  
  }
  
  Future<void> set_update(bool update) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_update', {'refId': refId, "update": update});
  
  
  }
  
  Future<void> set_pt(CLLocationCoordinate2D pt) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_pt', {'refId': refId, "pt": pt.refId});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}

extension BMKOLUpdateElement_Batch on List<BMKOLUpdateElement> {
  //region getters
  Future<List<String>> get_cityName_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_cityName_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<int>> get_cityID_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_cityID_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<int>> get_ratio_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_ratio_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<int>> get_status_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_status_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<bool>> get_update_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_update_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<CLLocationCoordinate2D>> get_pt_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_pt_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => CLLocationCoordinate2D()..refId = result..tag = 'bmap_map_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  //endregion

  //region methods
  
  //endregion
}