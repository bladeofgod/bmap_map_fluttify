//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package com.fluttify.bmap_map_fluttify.sub_handler;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.platform.PlatformViewRegistry;

import com.fluttify.bmap_map_fluttify.BmapMapFluttifyPlugin.Handler;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class SubHandler0 {
    public static Map<String, Handler> getSubHandler(BinaryMessenger messenger) {
        return new HashMap<String, Handler>() {{
            // getter
            put("com.baidu.mapapi.utils.poi.DispathcPoiData::get_name", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.utils.poi.DispathcPoiData ref = (com.baidu.mapapi.utils.poi.DispathcPoiData) getHEAP().get(refId);
            
                String result = ref.name;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.utils.poi.DispathcPoiData::get_pt", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.utils.poi.DispathcPoiData ref = (com.baidu.mapapi.utils.poi.DispathcPoiData) getHEAP().get(refId);
            
                com.baidu.mapapi.model.LatLng result = ref.pt;
            
                getHEAP().put(result.hashCode(), result);
            
                methodResult.success(result.hashCode());
            });
            // getter
            put("com.baidu.mapapi.utils.poi.DispathcPoiData::get_addr", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.utils.poi.DispathcPoiData ref = (com.baidu.mapapi.utils.poi.DispathcPoiData) getHEAP().get(refId);
            
                String result = ref.addr;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.utils.poi.DispathcPoiData::get_uid", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.utils.poi.DispathcPoiData ref = (com.baidu.mapapi.utils.poi.DispathcPoiData) getHEAP().get(refId);
            
                String result = ref.uid;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.Tile::get_data", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Tile ref = (com.baidu.mapapi.map.Tile) getHEAP().get(refId);
            
                byte[] result = ref.data;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.Tile::get_height", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Tile ref = (com.baidu.mapapi.map.Tile) getHEAP().get(refId);
            
                int result = ref.height;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.Tile::get_width", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Tile ref = (com.baidu.mapapi.map.Tile) getHEAP().get(refId);
            
                int result = ref.width;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.WinRound::get_left", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.WinRound ref = (com.baidu.mapapi.map.WinRound) getHEAP().get(refId);
            
                int result = ref.left;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.WinRound::get_right", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.WinRound ref = (com.baidu.mapapi.map.WinRound) getHEAP().get(refId);
            
                int result = ref.right;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.WinRound::get_top", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.WinRound ref = (com.baidu.mapapi.map.WinRound) getHEAP().get(refId);
            
                int result = ref.top;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.WinRound::get_bottom", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.WinRound ref = (com.baidu.mapapi.map.WinRound) getHEAP().get(refId);
            
                int result = ref.bottom;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.Stroke::get_strokeWidth", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Stroke ref = (com.baidu.mapapi.map.Stroke) getHEAP().get(refId);
            
                int result = ref.strokeWidth;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.Stroke::get_color", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.Stroke ref = (com.baidu.mapapi.map.Stroke) getHEAP().get(refId);
            
                int result = ref.color;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.WeightedLatLng::get_intensity", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.WeightedLatLng ref = (com.baidu.mapapi.map.WeightedLatLng) getHEAP().get(refId);
            
                double result = ref.intensity;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.WeightedLatLng::get_latLng", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.WeightedLatLng ref = (com.baidu.mapapi.map.WeightedLatLng) getHEAP().get(refId);
            
                com.baidu.mapapi.model.LatLng result = ref.latLng;
            
                getHEAP().put(result.hashCode(), result);
            
                methodResult.success(result.hashCode());
            });
            // getter
            put("com.baidu.mapapi.map.MapStatus::get_rotate", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MapStatus ref = (com.baidu.mapapi.map.MapStatus) getHEAP().get(refId);
            
                float result = ref.rotate;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.MapStatus::get_target", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MapStatus ref = (com.baidu.mapapi.map.MapStatus) getHEAP().get(refId);
            
                com.baidu.mapapi.model.LatLng result = ref.target;
            
                getHEAP().put(result.hashCode(), result);
            
                methodResult.success(result.hashCode());
            });
            // getter
            put("com.baidu.mapapi.map.MapStatus::get_overlook", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MapStatus ref = (com.baidu.mapapi.map.MapStatus) getHEAP().get(refId);
            
                float result = ref.overlook;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.MapStatus::get_zoom", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MapStatus ref = (com.baidu.mapapi.map.MapStatus) getHEAP().get(refId);
            
                float result = ref.zoom;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.MapStatus::get_targetScreen", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MapStatus ref = (com.baidu.mapapi.map.MapStatus) getHEAP().get(refId);
            
                android.graphics.Point result = ref.targetScreen;
            
                getHEAP().put(result.hashCode(), result);
            
                methodResult.success(result.hashCode());
            });
            // getter
            put("com.baidu.mapapi.map.MapStatus::get_bound", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MapStatus ref = (com.baidu.mapapi.map.MapStatus) getHEAP().get(refId);
            
                com.baidu.mapapi.model.LatLngBounds result = ref.bound;
            
                getHEAP().put(result.hashCode(), result);
            
                methodResult.success(result.hashCode());
            });
            // getter
            put("com.baidu.mapapi.map.MapStatus::get_winRound", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MapStatus ref = (com.baidu.mapapi.map.MapStatus) getHEAP().get(refId);
            
                com.baidu.mapapi.map.WinRound result = ref.winRound;
            
                getHEAP().put(result.hashCode(), result);
            
                methodResult.success(result.hashCode());
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationConfiguration::get_locationMode", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MyLocationConfiguration ref = (com.baidu.mapapi.map.MyLocationConfiguration) getHEAP().get(refId);
            
                com.baidu.mapapi.map.MyLocationConfiguration.LocationMode result = ref.locationMode;
            
                getHEAP().put(result.hashCode(), result);
            
                methodResult.success(result.hashCode());
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationConfiguration::get_enableDirection", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MyLocationConfiguration ref = (com.baidu.mapapi.map.MyLocationConfiguration) getHEAP().get(refId);
            
                boolean result = ref.enableDirection;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationConfiguration::get_customMarker", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MyLocationConfiguration ref = (com.baidu.mapapi.map.MyLocationConfiguration) getHEAP().get(refId);
            
                com.baidu.mapapi.map.BitmapDescriptor result = ref.customMarker;
            
                getHEAP().put(result.hashCode(), result);
            
                methodResult.success(result.hashCode());
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationConfiguration::get_accuracyCircleFillColor", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MyLocationConfiguration ref = (com.baidu.mapapi.map.MyLocationConfiguration) getHEAP().get(refId);
            
                int result = ref.accuracyCircleFillColor;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationConfiguration::get_accuracyCircleStrokeColor", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MyLocationConfiguration ref = (com.baidu.mapapi.map.MyLocationConfiguration) getHEAP().get(refId);
            
                int result = ref.accuracyCircleStrokeColor;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.TileOverlayOptions::get_datasource", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.TileOverlayOptions ref = (com.baidu.mapapi.map.TileOverlayOptions) getHEAP().get(refId);
            
                int result = ref.datasource;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.TileOverlayOptions::get_urlString", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.TileOverlayOptions ref = (com.baidu.mapapi.map.TileOverlayOptions) getHEAP().get(refId);
            
                String result = ref.urlString;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::get_cityID", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                int result = ref.cityID;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::get_cityName", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                String result = ref.cityName;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::get_ratio", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                int result = ref.ratio;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::get_status", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                int result = ref.status;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::get_geoPt", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                com.baidu.mapapi.model.LatLng result = ref.geoPt;
            
                getHEAP().put(result.hashCode(), result);
            
                methodResult.success(result.hashCode());
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::get_size", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                int result = ref.size;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::get_serversize", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                int result = ref.serversize;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::get_level", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                int result = ref.level;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::get_update", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                boolean result = ref.update;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLSearchRecord::get_cityID", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLSearchRecord ref = (com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get(refId);
            
                int result = ref.cityID;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLSearchRecord::get_size", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLSearchRecord ref = (com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get(refId);
            
                int result = ref.size;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLSearchRecord::get_dataSize", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLSearchRecord ref = (com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get(refId);
            
                long result = ref.dataSize;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLSearchRecord::get_cityName", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLSearchRecord ref = (com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get(refId);
            
                String result = ref.cityName;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLSearchRecord::get_cityType", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLSearchRecord ref = (com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get(refId);
            
                int result = ref.cityType;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLSearchRecord::get_childCities", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLSearchRecord ref = (com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get(refId);
            
                java.util.ArrayList<com.baidu.mapapi.map.offline.MKOLSearchRecord> result = ref.childCities;
            
                getHEAP().put(result.hashCode(), result);
            
                methodResult.success(result.hashCode());
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationData::get_latitude", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MyLocationData ref = (com.baidu.mapapi.map.MyLocationData) getHEAP().get(refId);
            
                double result = ref.latitude;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationData::get_longitude", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MyLocationData ref = (com.baidu.mapapi.map.MyLocationData) getHEAP().get(refId);
            
                double result = ref.longitude;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationData::get_speed", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MyLocationData ref = (com.baidu.mapapi.map.MyLocationData) getHEAP().get(refId);
            
                float result = ref.speed;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationData::get_direction", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MyLocationData ref = (com.baidu.mapapi.map.MyLocationData) getHEAP().get(refId);
            
                float result = ref.direction;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationData::get_accuracy", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MyLocationData ref = (com.baidu.mapapi.map.MyLocationData) getHEAP().get(refId);
            
                float result = ref.accuracy;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationData::get_satellitesNum", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MyLocationData ref = (com.baidu.mapapi.map.MyLocationData) getHEAP().get(refId);
            
                int result = ref.satellitesNum;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.model.inner.Point::get_x", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.model.inner.Point ref = (com.baidu.mapapi.model.inner.Point) getHEAP().get(refId);
            
                int result = ref.x;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.model.inner.Point::get_y", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.model.inner.Point ref = (com.baidu.mapapi.model.inner.Point) getHEAP().get(refId);
            
                int result = ref.y;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.model.inner.MapBound::get_ptLB", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.model.inner.MapBound ref = (com.baidu.mapapi.model.inner.MapBound) getHEAP().get(refId);
            
                com.baidu.mapapi.model.inner.Point result = ref.ptLB;
            
                getHEAP().put(result.hashCode(), result);
            
                methodResult.success(result.hashCode());
            });
            // getter
            put("com.baidu.mapapi.model.inner.MapBound::get_ptRT", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.model.inner.MapBound ref = (com.baidu.mapapi.model.inner.MapBound) getHEAP().get(refId);
            
                com.baidu.mapapi.model.inner.Point result = ref.ptRT;
            
                getHEAP().put(result.hashCode(), result);
            
                methodResult.success(result.hashCode());
            });
            // getter
            put("com.baidu.mapapi.model.LatLngBounds::get_northeast", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.model.LatLngBounds ref = (com.baidu.mapapi.model.LatLngBounds) getHEAP().get(refId);
            
                com.baidu.mapapi.model.LatLng result = ref.northeast;
            
                getHEAP().put(result.hashCode(), result);
            
                methodResult.success(result.hashCode());
            });
            // getter
            put("com.baidu.mapapi.model.LatLngBounds::get_southwest", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.model.LatLngBounds ref = (com.baidu.mapapi.model.LatLngBounds) getHEAP().get(refId);
            
                com.baidu.mapapi.model.LatLng result = ref.southwest;
            
                getHEAP().put(result.hashCode(), result);
            
                methodResult.success(result.hashCode());
            });
            // getter
            put("com.baidu.mapapi.model.LatLng::get_latitude", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.model.LatLng ref = (com.baidu.mapapi.model.LatLng) getHEAP().get(refId);
            
                double result = ref.latitude;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.model.LatLng::get_longitude", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.model.LatLng ref = (com.baidu.mapapi.model.LatLng) getHEAP().get(refId);
            
                double result = ref.longitude;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.model.LatLng::get_latitudeE6", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.model.LatLng ref = (com.baidu.mapapi.model.LatLng) getHEAP().get(refId);
            
                double result = ref.latitudeE6;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.model.LatLng::get_longitudeE6", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.model.LatLng ref = (com.baidu.mapapi.model.LatLng) getHEAP().get(refId);
            
                double result = ref.longitudeE6;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapsdkplatform.comjni.map.basemap.JNIBaseMap::get_a", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comjni.map.basemap.JNIBaseMap ref = (com.baidu.mapsdkplatform.comjni.map.basemap.JNIBaseMap) getHEAP().get(refId);
            
                long result = ref.a;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_a", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                String result = ref.a;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_b", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                String result = ref.b;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_c", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                com.baidu.mapapi.model.inner.Point result = ref.c;
            
                getHEAP().put(result.hashCode(), result);
            
                methodResult.success(result.hashCode());
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_d", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                String result = ref.d;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_e", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                String result = ref.e;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_f", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                String result = ref.f;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_g", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                int result = ref.g;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_h", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                String result = ref.h;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_i", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                boolean result = ref.i;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_j", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                String result = ref.j;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.baidu.mapapi.utils.poi.DispathcPoiData::get_name_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.utils.poi.DispathcPoiData ref = (com.baidu.mapapi.utils.poi.DispathcPoiData) getHEAP().get((int) args.get("refId"));
            
                    String result = ref.name;
            
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.utils.poi.DispathcPoiData::get_pt_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.utils.poi.DispathcPoiData ref = (com.baidu.mapapi.utils.poi.DispathcPoiData) getHEAP().get((int) args.get("refId"));
            
                    com.baidu.mapapi.model.LatLng result = ref.pt;
            
                    Integer jsonableResult = null;
            if (result != null) {
                jsonableResult = System.identityHashCode(result);
                getHEAP().put(jsonableResult, result);
            }
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.utils.poi.DispathcPoiData::get_addr_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.utils.poi.DispathcPoiData ref = (com.baidu.mapapi.utils.poi.DispathcPoiData) getHEAP().get((int) args.get("refId"));
            
                    String result = ref.addr;
            
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.utils.poi.DispathcPoiData::get_uid_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.utils.poi.DispathcPoiData ref = (com.baidu.mapapi.utils.poi.DispathcPoiData) getHEAP().get((int) args.get("refId"));
            
                    String result = ref.uid;
            
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.Tile::get_data_batch", (argsBatch, methodResult) -> {
                List<byte[]> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.Tile ref = (com.baidu.mapapi.map.Tile) getHEAP().get((int) args.get("refId"));
            
                    byte[] result = ref.data;
            
                    byte[] jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.Tile::get_height_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.Tile ref = (com.baidu.mapapi.map.Tile) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.height;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.Tile::get_width_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.Tile ref = (com.baidu.mapapi.map.Tile) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.width;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.WinRound::get_left_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.WinRound ref = (com.baidu.mapapi.map.WinRound) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.left;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.WinRound::get_right_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.WinRound ref = (com.baidu.mapapi.map.WinRound) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.right;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.WinRound::get_top_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.WinRound ref = (com.baidu.mapapi.map.WinRound) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.top;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.WinRound::get_bottom_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.WinRound ref = (com.baidu.mapapi.map.WinRound) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.bottom;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.Stroke::get_strokeWidth_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.Stroke ref = (com.baidu.mapapi.map.Stroke) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.strokeWidth;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.Stroke::get_color_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.Stroke ref = (com.baidu.mapapi.map.Stroke) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.color;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.WeightedLatLng::get_intensity_batch", (argsBatch, methodResult) -> {
                List<Double> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.WeightedLatLng ref = (com.baidu.mapapi.map.WeightedLatLng) getHEAP().get((int) args.get("refId"));
            
                    double result = ref.intensity;
            
                    double jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.WeightedLatLng::get_latLng_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.WeightedLatLng ref = (com.baidu.mapapi.map.WeightedLatLng) getHEAP().get((int) args.get("refId"));
            
                    com.baidu.mapapi.model.LatLng result = ref.latLng;
            
                    Integer jsonableResult = null;
            if (result != null) {
                jsonableResult = System.identityHashCode(result);
                getHEAP().put(jsonableResult, result);
            }
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.MapStatus::get_rotate_batch", (argsBatch, methodResult) -> {
                List<Float> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.MapStatus ref = (com.baidu.mapapi.map.MapStatus) getHEAP().get((int) args.get("refId"));
            
                    float result = ref.rotate;
            
                    float jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.MapStatus::get_target_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.MapStatus ref = (com.baidu.mapapi.map.MapStatus) getHEAP().get((int) args.get("refId"));
            
                    com.baidu.mapapi.model.LatLng result = ref.target;
            
                    Integer jsonableResult = null;
            if (result != null) {
                jsonableResult = System.identityHashCode(result);
                getHEAP().put(jsonableResult, result);
            }
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.MapStatus::get_overlook_batch", (argsBatch, methodResult) -> {
                List<Float> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.MapStatus ref = (com.baidu.mapapi.map.MapStatus) getHEAP().get((int) args.get("refId"));
            
                    float result = ref.overlook;
            
                    float jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.MapStatus::get_zoom_batch", (argsBatch, methodResult) -> {
                List<Float> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.MapStatus ref = (com.baidu.mapapi.map.MapStatus) getHEAP().get((int) args.get("refId"));
            
                    float result = ref.zoom;
            
                    float jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.MapStatus::get_targetScreen_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.MapStatus ref = (com.baidu.mapapi.map.MapStatus) getHEAP().get((int) args.get("refId"));
            
                    android.graphics.Point result = ref.targetScreen;
            
                    Integer jsonableResult = null;
            if (result != null) {
                jsonableResult = System.identityHashCode(result);
                getHEAP().put(jsonableResult, result);
            }
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.MapStatus::get_bound_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.MapStatus ref = (com.baidu.mapapi.map.MapStatus) getHEAP().get((int) args.get("refId"));
            
                    com.baidu.mapapi.model.LatLngBounds result = ref.bound;
            
                    Integer jsonableResult = null;
            if (result != null) {
                jsonableResult = System.identityHashCode(result);
                getHEAP().put(jsonableResult, result);
            }
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.MapStatus::get_winRound_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.MapStatus ref = (com.baidu.mapapi.map.MapStatus) getHEAP().get((int) args.get("refId"));
            
                    com.baidu.mapapi.map.WinRound result = ref.winRound;
            
                    Integer jsonableResult = null;
            if (result != null) {
                jsonableResult = System.identityHashCode(result);
                getHEAP().put(jsonableResult, result);
            }
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationConfiguration::get_locationMode_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.MyLocationConfiguration ref = (com.baidu.mapapi.map.MyLocationConfiguration) getHEAP().get((int) args.get("refId"));
            
                    com.baidu.mapapi.map.MyLocationConfiguration.LocationMode result = ref.locationMode;
            
                    Integer jsonableResult = null;
            if (result != null) {
                jsonableResult = System.identityHashCode(result);
                getHEAP().put(jsonableResult, result);
            }
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationConfiguration::get_enableDirection_batch", (argsBatch, methodResult) -> {
                List<Boolean> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.MyLocationConfiguration ref = (com.baidu.mapapi.map.MyLocationConfiguration) getHEAP().get((int) args.get("refId"));
            
                    boolean result = ref.enableDirection;
            
                    boolean jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationConfiguration::get_customMarker_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.MyLocationConfiguration ref = (com.baidu.mapapi.map.MyLocationConfiguration) getHEAP().get((int) args.get("refId"));
            
                    com.baidu.mapapi.map.BitmapDescriptor result = ref.customMarker;
            
                    Integer jsonableResult = null;
            if (result != null) {
                jsonableResult = System.identityHashCode(result);
                getHEAP().put(jsonableResult, result);
            }
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationConfiguration::get_accuracyCircleFillColor_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.MyLocationConfiguration ref = (com.baidu.mapapi.map.MyLocationConfiguration) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.accuracyCircleFillColor;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationConfiguration::get_accuracyCircleStrokeColor_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.MyLocationConfiguration ref = (com.baidu.mapapi.map.MyLocationConfiguration) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.accuracyCircleStrokeColor;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.TileOverlayOptions::get_datasource_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.TileOverlayOptions ref = (com.baidu.mapapi.map.TileOverlayOptions) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.datasource;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.TileOverlayOptions::get_urlString_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.TileOverlayOptions ref = (com.baidu.mapapi.map.TileOverlayOptions) getHEAP().get((int) args.get("refId"));
            
                    String result = ref.urlString;
            
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::get_cityID_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.cityID;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::get_cityName_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get((int) args.get("refId"));
            
                    String result = ref.cityName;
            
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::get_ratio_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.ratio;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::get_status_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.status;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::get_geoPt_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get((int) args.get("refId"));
            
                    com.baidu.mapapi.model.LatLng result = ref.geoPt;
            
                    Integer jsonableResult = null;
            if (result != null) {
                jsonableResult = System.identityHashCode(result);
                getHEAP().put(jsonableResult, result);
            }
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::get_size_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.size;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::get_serversize_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.serversize;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::get_level_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.level;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::get_update_batch", (argsBatch, methodResult) -> {
                List<Boolean> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get((int) args.get("refId"));
            
                    boolean result = ref.update;
            
                    boolean jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLSearchRecord::get_cityID_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.offline.MKOLSearchRecord ref = (com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.cityID;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLSearchRecord::get_size_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.offline.MKOLSearchRecord ref = (com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.size;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLSearchRecord::get_dataSize_batch", (argsBatch, methodResult) -> {
                List<Long> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.offline.MKOLSearchRecord ref = (com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get((int) args.get("refId"));
            
                    long result = ref.dataSize;
            
                    long jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLSearchRecord::get_cityName_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.offline.MKOLSearchRecord ref = (com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get((int) args.get("refId"));
            
                    String result = ref.cityName;
            
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLSearchRecord::get_cityType_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.offline.MKOLSearchRecord ref = (com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.cityType;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.offline.MKOLSearchRecord::get_childCities_batch", (argsBatch, methodResult) -> {
                List<List<Integer>> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.offline.MKOLSearchRecord ref = (com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get((int) args.get("refId"));
            
                    java.util.ArrayList<com.baidu.mapapi.map.offline.MKOLSearchRecord> result = ref.childCities;
            
                    List<Integer> jsonableResult = null;
            if (result != null) {
                jsonableResult = new ArrayList<>();
                for (com.baidu.mapapi.map.offline.MKOLSearchRecord item : result) {
                    getHEAP().put(System.identityHashCode(item), item);
                    jsonableResult.add(System.identityHashCode(item));
                }
            }
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationData::get_latitude_batch", (argsBatch, methodResult) -> {
                List<Double> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.MyLocationData ref = (com.baidu.mapapi.map.MyLocationData) getHEAP().get((int) args.get("refId"));
            
                    double result = ref.latitude;
            
                    double jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationData::get_longitude_batch", (argsBatch, methodResult) -> {
                List<Double> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.MyLocationData ref = (com.baidu.mapapi.map.MyLocationData) getHEAP().get((int) args.get("refId"));
            
                    double result = ref.longitude;
            
                    double jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationData::get_speed_batch", (argsBatch, methodResult) -> {
                List<Float> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.MyLocationData ref = (com.baidu.mapapi.map.MyLocationData) getHEAP().get((int) args.get("refId"));
            
                    float result = ref.speed;
            
                    float jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationData::get_direction_batch", (argsBatch, methodResult) -> {
                List<Float> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.MyLocationData ref = (com.baidu.mapapi.map.MyLocationData) getHEAP().get((int) args.get("refId"));
            
                    float result = ref.direction;
            
                    float jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationData::get_accuracy_batch", (argsBatch, methodResult) -> {
                List<Float> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.MyLocationData ref = (com.baidu.mapapi.map.MyLocationData) getHEAP().get((int) args.get("refId"));
            
                    float result = ref.accuracy;
            
                    float jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.map.MyLocationData::get_satellitesNum_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.map.MyLocationData ref = (com.baidu.mapapi.map.MyLocationData) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.satellitesNum;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.model.inner.Point::get_x_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.model.inner.Point ref = (com.baidu.mapapi.model.inner.Point) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.x;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.model.inner.Point::get_y_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.model.inner.Point ref = (com.baidu.mapapi.model.inner.Point) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.y;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.model.inner.MapBound::get_ptLB_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.model.inner.MapBound ref = (com.baidu.mapapi.model.inner.MapBound) getHEAP().get((int) args.get("refId"));
            
                    com.baidu.mapapi.model.inner.Point result = ref.ptLB;
            
                    Integer jsonableResult = null;
            if (result != null) {
                jsonableResult = System.identityHashCode(result);
                getHEAP().put(jsonableResult, result);
            }
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.model.inner.MapBound::get_ptRT_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.model.inner.MapBound ref = (com.baidu.mapapi.model.inner.MapBound) getHEAP().get((int) args.get("refId"));
            
                    com.baidu.mapapi.model.inner.Point result = ref.ptRT;
            
                    Integer jsonableResult = null;
            if (result != null) {
                jsonableResult = System.identityHashCode(result);
                getHEAP().put(jsonableResult, result);
            }
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.model.LatLngBounds::get_northeast_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.model.LatLngBounds ref = (com.baidu.mapapi.model.LatLngBounds) getHEAP().get((int) args.get("refId"));
            
                    com.baidu.mapapi.model.LatLng result = ref.northeast;
            
                    Integer jsonableResult = null;
            if (result != null) {
                jsonableResult = System.identityHashCode(result);
                getHEAP().put(jsonableResult, result);
            }
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.model.LatLngBounds::get_southwest_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.model.LatLngBounds ref = (com.baidu.mapapi.model.LatLngBounds) getHEAP().get((int) args.get("refId"));
            
                    com.baidu.mapapi.model.LatLng result = ref.southwest;
            
                    Integer jsonableResult = null;
            if (result != null) {
                jsonableResult = System.identityHashCode(result);
                getHEAP().put(jsonableResult, result);
            }
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.model.LatLng::get_latitude_batch", (argsBatch, methodResult) -> {
                List<Double> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.model.LatLng ref = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) args.get("refId"));
            
                    double result = ref.latitude;
            
                    double jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.model.LatLng::get_longitude_batch", (argsBatch, methodResult) -> {
                List<Double> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.model.LatLng ref = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) args.get("refId"));
            
                    double result = ref.longitude;
            
                    double jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.model.LatLng::get_latitudeE6_batch", (argsBatch, methodResult) -> {
                List<Double> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.model.LatLng ref = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) args.get("refId"));
            
                    double result = ref.latitudeE6;
            
                    double jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapapi.model.LatLng::get_longitudeE6_batch", (argsBatch, methodResult) -> {
                List<Double> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapapi.model.LatLng ref = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) args.get("refId"));
            
                    double result = ref.longitudeE6;
            
                    double jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapsdkplatform.comjni.map.basemap.JNIBaseMap::get_a_batch", (argsBatch, methodResult) -> {
                List<Long> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapsdkplatform.comjni.map.basemap.JNIBaseMap ref = (com.baidu.mapsdkplatform.comjni.map.basemap.JNIBaseMap) getHEAP().get((int) args.get("refId"));
            
                    long result = ref.a;
            
                    long jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_a_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get((int) args.get("refId"));
            
                    String result = ref.a;
            
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_b_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get((int) args.get("refId"));
            
                    String result = ref.b;
            
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_c_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get((int) args.get("refId"));
            
                    com.baidu.mapapi.model.inner.Point result = ref.c;
            
                    Integer jsonableResult = null;
            if (result != null) {
                jsonableResult = System.identityHashCode(result);
                getHEAP().put(jsonableResult, result);
            }
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_d_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get((int) args.get("refId"));
            
                    String result = ref.d;
            
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_e_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get((int) args.get("refId"));
            
                    String result = ref.e;
            
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_f_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get((int) args.get("refId"));
            
                    String result = ref.f;
            
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_g_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.g;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_h_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get((int) args.get("refId"));
            
                    String result = ref.h;
            
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_i_batch", (argsBatch, methodResult) -> {
                List<Boolean> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get((int) args.get("refId"));
            
                    boolean result = ref.i;
            
                    boolean jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::get_j_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get((int) args.get("refId"));
            
                    String result = ref.j;
            
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // setter
            put("com.baidu.mapapi.utils.poi.DispathcPoiData::set_name", (args, methodResult) -> {
                // jsonable arg
                String name = (String) ((Map<String, Object>) args).get("name");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.utils.poi.DispathcPoiData ref = (com.baidu.mapapi.utils.poi.DispathcPoiData) getHEAP().get(refId);
            
                ref.name = name;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.utils.poi.DispathcPoiData::set_pt", (args, methodResult) -> {
                // ref arg
                com.baidu.mapapi.model.LatLng pt = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("pt"));
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.utils.poi.DispathcPoiData ref = (com.baidu.mapapi.utils.poi.DispathcPoiData) getHEAP().get(refId);
            
                ref.pt = pt;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.utils.poi.DispathcPoiData::set_addr", (args, methodResult) -> {
                // jsonable arg
                String addr = (String) ((Map<String, Object>) args).get("addr");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.utils.poi.DispathcPoiData ref = (com.baidu.mapapi.utils.poi.DispathcPoiData) getHEAP().get(refId);
            
                ref.addr = addr;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.utils.poi.DispathcPoiData::set_uid", (args, methodResult) -> {
                // jsonable arg
                String uid = (String) ((Map<String, Object>) args).get("uid");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.utils.poi.DispathcPoiData ref = (com.baidu.mapapi.utils.poi.DispathcPoiData) getHEAP().get(refId);
            
                ref.uid = uid;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.WinRound::set_left", (args, methodResult) -> {
                // jsonable arg
                int left = (int) ((Map<String, Object>) args).get("left");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.WinRound ref = (com.baidu.mapapi.map.WinRound) getHEAP().get(refId);
            
                ref.left = left;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.WinRound::set_right", (args, methodResult) -> {
                // jsonable arg
                int right = (int) ((Map<String, Object>) args).get("right");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.WinRound ref = (com.baidu.mapapi.map.WinRound) getHEAP().get(refId);
            
                ref.right = right;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.WinRound::set_top", (args, methodResult) -> {
                // jsonable arg
                int top = (int) ((Map<String, Object>) args).get("top");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.WinRound ref = (com.baidu.mapapi.map.WinRound) getHEAP().get(refId);
            
                ref.top = top;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.WinRound::set_bottom", (args, methodResult) -> {
                // jsonable arg
                int bottom = (int) ((Map<String, Object>) args).get("bottom");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.WinRound ref = (com.baidu.mapapi.map.WinRound) getHEAP().get(refId);
            
                ref.bottom = bottom;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.MapStatus::set_winRound", (args, methodResult) -> {
                // ref arg
                com.baidu.mapapi.map.WinRound winRound = (com.baidu.mapapi.map.WinRound) getHEAP().get((int) ((Map<String, Object>) args).get("winRound"));
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MapStatus ref = (com.baidu.mapapi.map.MapStatus) getHEAP().get(refId);
            
                ref.winRound = winRound;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.MyLocationConfiguration::set_accuracyCircleFillColor", (args, methodResult) -> {
                // jsonable arg
                int accuracyCircleFillColor = (int) ((Map<String, Object>) args).get("accuracyCircleFillColor");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MyLocationConfiguration ref = (com.baidu.mapapi.map.MyLocationConfiguration) getHEAP().get(refId);
            
                ref.accuracyCircleFillColor = accuracyCircleFillColor;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.MyLocationConfiguration::set_accuracyCircleStrokeColor", (args, methodResult) -> {
                // jsonable arg
                int accuracyCircleStrokeColor = (int) ((Map<String, Object>) args).get("accuracyCircleStrokeColor");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.MyLocationConfiguration ref = (com.baidu.mapapi.map.MyLocationConfiguration) getHEAP().get(refId);
            
                ref.accuracyCircleStrokeColor = accuracyCircleStrokeColor;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.TileOverlayOptions::set_datasource", (args, methodResult) -> {
                // jsonable arg
                int datasource = (int) ((Map<String, Object>) args).get("datasource");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.TileOverlayOptions ref = (com.baidu.mapapi.map.TileOverlayOptions) getHEAP().get(refId);
            
                ref.datasource = datasource;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.TileOverlayOptions::set_urlString", (args, methodResult) -> {
                // jsonable arg
                String urlString = (String) ((Map<String, Object>) args).get("urlString");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.TileOverlayOptions ref = (com.baidu.mapapi.map.TileOverlayOptions) getHEAP().get(refId);
            
                ref.urlString = urlString;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::set_cityID", (args, methodResult) -> {
                // jsonable arg
                int cityID = (int) ((Map<String, Object>) args).get("cityID");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                ref.cityID = cityID;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::set_cityName", (args, methodResult) -> {
                // jsonable arg
                String cityName = (String) ((Map<String, Object>) args).get("cityName");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                ref.cityName = cityName;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::set_ratio", (args, methodResult) -> {
                // jsonable arg
                int ratio = (int) ((Map<String, Object>) args).get("ratio");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                ref.ratio = ratio;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::set_status", (args, methodResult) -> {
                // jsonable arg
                int status = (int) ((Map<String, Object>) args).get("status");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                ref.status = status;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::set_geoPt", (args, methodResult) -> {
                // ref arg
                com.baidu.mapapi.model.LatLng geoPt = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("geoPt"));
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                ref.geoPt = geoPt;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::set_size", (args, methodResult) -> {
                // jsonable arg
                int size = (int) ((Map<String, Object>) args).get("size");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                ref.size = size;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::set_serversize", (args, methodResult) -> {
                // jsonable arg
                int serversize = (int) ((Map<String, Object>) args).get("serversize");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                ref.serversize = serversize;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::set_level", (args, methodResult) -> {
                // jsonable arg
                int level = (int) ((Map<String, Object>) args).get("level");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                ref.level = level;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::set_update", (args, methodResult) -> {
                // jsonable arg
                boolean update = (boolean) ((Map<String, Object>) args).get("update");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                ref.update = update;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.offline.MKOLSearchRecord::set_cityID", (args, methodResult) -> {
                // jsonable arg
                int cityID = (int) ((Map<String, Object>) args).get("cityID");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLSearchRecord ref = (com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get(refId);
            
                ref.cityID = cityID;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.offline.MKOLSearchRecord::set_size", (args, methodResult) -> {
                // jsonable arg
                int size = (int) ((Map<String, Object>) args).get("size");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLSearchRecord ref = (com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get(refId);
            
                ref.size = size;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.offline.MKOLSearchRecord::set_dataSize", (args, methodResult) -> {
                // jsonable arg
                long dataSize = (long) (int) ((Map<String, Object>) args).get("dataSize");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLSearchRecord ref = (com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get(refId);
            
                ref.dataSize = dataSize;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.offline.MKOLSearchRecord::set_cityName", (args, methodResult) -> {
                // jsonable arg
                String cityName = (String) ((Map<String, Object>) args).get("cityName");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLSearchRecord ref = (com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get(refId);
            
                ref.cityName = cityName;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.offline.MKOLSearchRecord::set_cityType", (args, methodResult) -> {
                // jsonable arg
                int cityType = (int) ((Map<String, Object>) args).get("cityType");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLSearchRecord ref = (com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get(refId);
            
                ref.cityType = cityType;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.map.offline.MKOLSearchRecord::set_childCities", (args, methodResult) -> {
                // list arg
                List<Integer> childCitiesRefIdList = (List<Integer>) ((Map<String, Object>) args).get("childCities");
                java.util.ArrayList<com.baidu.mapapi.map.offline.MKOLSearchRecord> childCities = new ArrayList<>();
                for (int refId : childCitiesRefIdList) {
                    ((ArrayList<com.baidu.mapapi.map.offline.MKOLSearchRecord>) childCities).add((com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get(refId));
                }
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.map.offline.MKOLSearchRecord ref = (com.baidu.mapapi.map.offline.MKOLSearchRecord) getHEAP().get(refId);
            
                ref.childCities = (ArrayList) childCities;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.model.inner.Point::set_x", (args, methodResult) -> {
                // jsonable arg
                int x = (int) ((Map<String, Object>) args).get("x");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.model.inner.Point ref = (com.baidu.mapapi.model.inner.Point) getHEAP().get(refId);
            
                ref.x = x;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.model.inner.Point::set_y", (args, methodResult) -> {
                // jsonable arg
                int y = (int) ((Map<String, Object>) args).get("y");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.model.inner.Point ref = (com.baidu.mapapi.model.inner.Point) getHEAP().get(refId);
            
                ref.y = y;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.model.inner.MapBound::set_ptLB", (args, methodResult) -> {
                // ref arg
                com.baidu.mapapi.model.inner.Point ptLB = (com.baidu.mapapi.model.inner.Point) getHEAP().get((int) ((Map<String, Object>) args).get("ptLB"));
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.model.inner.MapBound ref = (com.baidu.mapapi.model.inner.MapBound) getHEAP().get(refId);
            
                ref.ptLB = ptLB;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapapi.model.inner.MapBound::set_ptRT", (args, methodResult) -> {
                // ref arg
                com.baidu.mapapi.model.inner.Point ptRT = (com.baidu.mapapi.model.inner.Point) getHEAP().get((int) ((Map<String, Object>) args).get("ptRT"));
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapapi.model.inner.MapBound ref = (com.baidu.mapapi.model.inner.MapBound) getHEAP().get(refId);
            
                ref.ptRT = ptRT;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapsdkplatform.comjni.map.basemap.JNIBaseMap::set_a", (args, methodResult) -> {
                // jsonable arg
                long a = (long) (int) ((Map<String, Object>) args).get("a");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comjni.map.basemap.JNIBaseMap ref = (com.baidu.mapsdkplatform.comjni.map.basemap.JNIBaseMap) getHEAP().get(refId);
            
                ref.a = a;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::set_a", (args, methodResult) -> {
                // jsonable arg
                String a = (String) ((Map<String, Object>) args).get("a");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                ref.a = a;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::set_b", (args, methodResult) -> {
                // jsonable arg
                String b = (String) ((Map<String, Object>) args).get("b");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                ref.b = b;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::set_c", (args, methodResult) -> {
                // ref arg
                com.baidu.mapapi.model.inner.Point c = (com.baidu.mapapi.model.inner.Point) getHEAP().get((int) ((Map<String, Object>) args).get("c"));
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                ref.c = c;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::set_d", (args, methodResult) -> {
                // jsonable arg
                String d = (String) ((Map<String, Object>) args).get("d");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                ref.d = d;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::set_e", (args, methodResult) -> {
                // jsonable arg
                String e = (String) ((Map<String, Object>) args).get("e");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                ref.e = e;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::set_f", (args, methodResult) -> {
                // jsonable arg
                String f = (String) ((Map<String, Object>) args).get("f");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                ref.f = f;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::set_g", (args, methodResult) -> {
                // jsonable arg
                int g = (int) ((Map<String, Object>) args).get("g");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                ref.g = g;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::set_h", (args, methodResult) -> {
                // jsonable arg
                String h = (String) ((Map<String, Object>) args).get("h");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                ref.h = h;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::set_i", (args, methodResult) -> {
                // jsonable arg
                boolean i = (boolean) ((Map<String, Object>) args).get("i");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                ref.i = i;
                methodResult.success("success");
            });
            // setter
            put("com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi::set_j", (args, methodResult) -> {
                // jsonable arg
                String j = (String) ((Map<String, Object>) args).get("j");
            
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi ref = (com.baidu.mapsdkplatform.comapi.favrite.FavSyncPoi) getHEAP().get(refId);
            
                ref.j = j;
                methodResult.success("success");
            });
            // setter batch
            put("com.baidu.mapapi.utils.poi.DispathcPoiData::set_name_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    String name = (String) ((Map<String, Object>) args).get("name");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.baidu.mapapi.utils.poi.DispathcPoiData ref = (com.baidu.mapapi.utils.poi.DispathcPoiData) getHEAP().get(refId);
            
                    ref.name = name;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.baidu.mapapi.utils.poi.DispathcPoiData::set_pt_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref arg
                    com.baidu.mapapi.model.LatLng pt = (com.baidu.mapapi.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("pt"));
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.baidu.mapapi.utils.poi.DispathcPoiData ref = (com.baidu.mapapi.utils.poi.DispathcPoiData) getHEAP().get(refId);
            
                    ref.pt = pt;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.baidu.mapapi.utils.poi.DispathcPoiData::set_addr_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    String addr = (String) ((Map<String, Object>) args).get("addr");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.baidu.mapapi.utils.poi.DispathcPoiData ref = (com.baidu.mapapi.utils.poi.DispathcPoiData) getHEAP().get(refId);
            
                    ref.addr = addr;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.baidu.mapapi.utils.poi.DispathcPoiData::set_uid_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    String uid = (String) ((Map<String, Object>) args).get("uid");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.baidu.mapapi.utils.poi.DispathcPoiData ref = (com.baidu.mapapi.utils.poi.DispathcPoiData) getHEAP().get(refId);
            
                    ref.uid = uid;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.baidu.mapapi.map.WinRound::set_left_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int left = (int) ((Map<String, Object>) args).get("left");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.baidu.mapapi.map.WinRound ref = (com.baidu.mapapi.map.WinRound) getHEAP().get(refId);
            
                    ref.left = left;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.baidu.mapapi.map.WinRound::set_right_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int right = (int) ((Map<String, Object>) args).get("right");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.baidu.mapapi.map.WinRound ref = (com.baidu.mapapi.map.WinRound) getHEAP().get(refId);
            
                    ref.right = right;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.baidu.mapapi.map.WinRound::set_top_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int top = (int) ((Map<String, Object>) args).get("top");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.baidu.mapapi.map.WinRound ref = (com.baidu.mapapi.map.WinRound) getHEAP().get(refId);
            
                    ref.top = top;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.baidu.mapapi.map.WinRound::set_bottom_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int bottom = (int) ((Map<String, Object>) args).get("bottom");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.baidu.mapapi.map.WinRound ref = (com.baidu.mapapi.map.WinRound) getHEAP().get(refId);
            
                    ref.bottom = bottom;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.baidu.mapapi.map.MapStatus::set_winRound_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref arg
                    com.baidu.mapapi.map.WinRound winRound = (com.baidu.mapapi.map.WinRound) getHEAP().get((int) ((Map<String, Object>) args).get("winRound"));
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.baidu.mapapi.map.MapStatus ref = (com.baidu.mapapi.map.MapStatus) getHEAP().get(refId);
            
                    ref.winRound = winRound;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.baidu.mapapi.map.MyLocationConfiguration::set_accuracyCircleFillColor_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int accuracyCircleFillColor = (int) ((Map<String, Object>) args).get("accuracyCircleFillColor");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.baidu.mapapi.map.MyLocationConfiguration ref = (com.baidu.mapapi.map.MyLocationConfiguration) getHEAP().get(refId);
            
                    ref.accuracyCircleFillColor = accuracyCircleFillColor;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.baidu.mapapi.map.MyLocationConfiguration::set_accuracyCircleStrokeColor_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int accuracyCircleStrokeColor = (int) ((Map<String, Object>) args).get("accuracyCircleStrokeColor");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.baidu.mapapi.map.MyLocationConfiguration ref = (com.baidu.mapapi.map.MyLocationConfiguration) getHEAP().get(refId);
            
                    ref.accuracyCircleStrokeColor = accuracyCircleStrokeColor;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.baidu.mapapi.map.TileOverlayOptions::set_datasource_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int datasource = (int) ((Map<String, Object>) args).get("datasource");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.baidu.mapapi.map.TileOverlayOptions ref = (com.baidu.mapapi.map.TileOverlayOptions) getHEAP().get(refId);
            
                    ref.datasource = datasource;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.baidu.mapapi.map.TileOverlayOptions::set_urlString_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    String urlString = (String) ((Map<String, Object>) args).get("urlString");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.baidu.mapapi.map.TileOverlayOptions ref = (com.baidu.mapapi.map.TileOverlayOptions) getHEAP().get(refId);
            
                    ref.urlString = urlString;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::set_cityID_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    int cityID = (int) ((Map<String, Object>) args).get("cityID");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                    ref.cityID = cityID;
                }
            
                methodResult.success("success");
            });
            // setter batch
            put("com.baidu.mapapi.map.offline.MKOLUpdateElement::set_cityName_batch", (argsBatch, methodResult) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // jsonable arg
                    String cityName = (String) ((Map<String, Object>) args).get("cityName");
            
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.baidu.mapapi.map.offline.MKOLUpdateElement ref = (com.baidu.mapapi.map.offline.MKOLUpdateElement) getHEAP().get(refId);
            
                    ref.cityName = cityName;
                }
            
                methodResult.success("success");
            });
        }};
    }
}
