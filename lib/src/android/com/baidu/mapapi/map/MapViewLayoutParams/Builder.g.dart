// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_map_fluttify/src/ios/ios.export.g.dart';
import 'package:bmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';

class com_baidu_mapapi_map_MapViewLayoutParams_Builder extends java_lang_Object  {
  //region constants
  
  //endregion

  //region creators
  static Future<com_baidu_mapapi_map_MapViewLayoutParams_Builder> create__() async {
    final int refId = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('ObjectFactory::createcom_baidu_mapapi_map_MapViewLayoutParams_Builder__');
    final object = com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = refId..tag = 'bmap_map_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  static Future<List<com_baidu_mapapi_map_MapViewLayoutParams_Builder>> create_batch__(int length) async {
    // if (#__check_param_size__#) {
    //   return Future.error('all args must has same length!');
    // }
    final List resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('ObjectFactory::create_batchcom_baidu_mapapi_map_MapViewLayoutParams_Builder__', {'length': length});
  
    final List<com_baidu_mapapi_map_MapViewLayoutParams_Builder> typedResult = resultBatch.map((result) => com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  //endregion

  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  Future<com_baidu_mapapi_map_MapViewLayoutParams_Builder> width(int var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapViewLayoutParams.Builder@$refId::width([\'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::width', {"var1": var1, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  Future<com_baidu_mapapi_map_MapViewLayoutParams_Builder> height(int var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapViewLayoutParams.Builder@$refId::height([\'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::height', {"var1": var1, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  Future<com_baidu_mapapi_map_MapViewLayoutParams_Builder> align(int var1, int var2) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapViewLayoutParams.Builder@$refId::align([\'var1\':$var1, \'var2\':$var2])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::align', {"var1": var1, "var2": var2, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  Future<com_baidu_mapapi_map_MapViewLayoutParams_Builder> position(com_baidu_mapapi_model_LatLng var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapViewLayoutParams.Builder@$refId::position([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::position', {"var1": var1.refId, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  Future<com_baidu_mapapi_map_MapViewLayoutParams_Builder> point(android_graphics_Point var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapViewLayoutParams.Builder@$refId::point([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::point', {"var1": var1.refId, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  Future<com_baidu_mapapi_map_MapViewLayoutParams_Builder> layoutMode(com_baidu_mapapi_map_MapViewLayoutParams_ELayoutMode var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapViewLayoutParams.Builder@$refId::layoutMode([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::layoutMode', {"var1": var1.index, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  Future<com_baidu_mapapi_map_MapViewLayoutParams_Builder> yOffset(int var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.baidu.mapapi.map.MapViewLayoutParams.Builder@$refId::yOffset([\'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::yOffset', {"var1": var1, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify');
      return com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify';
    }
  }
  
  //endregion
}

extension com_baidu_mapapi_map_MapViewLayoutParams_Builder_Batch on List<com_baidu_mapapi_map_MapViewLayoutParams_Builder> {
  //region getters
  
  //endregion

  //region methods
  Future<List<com_baidu_mapapi_map_MapViewLayoutParams_Builder>> width_batch(List<int> var1) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::width_batch', [for (int i = 0; i < this.length; i++) {"var1": var1[i], "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<com_baidu_mapapi_map_MapViewLayoutParams_Builder>> height_batch(List<int> var1) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::height_batch', [for (int i = 0; i < this.length; i++) {"var1": var1[i], "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<com_baidu_mapapi_map_MapViewLayoutParams_Builder>> align_batch(List<int> var1, List<int> var2) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::align_batch', [for (int i = 0; i < this.length; i++) {"var1": var1[i], "var2": var2[i], "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<com_baidu_mapapi_map_MapViewLayoutParams_Builder>> position_batch(List<com_baidu_mapapi_model_LatLng> var1) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::position_batch', [for (int i = 0; i < this.length; i++) {"var1": var1[i].refId, "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<com_baidu_mapapi_map_MapViewLayoutParams_Builder>> point_batch(List<android_graphics_Point> var1) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::point_batch', [for (int i = 0; i < this.length; i++) {"var1": var1[i].refId, "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<com_baidu_mapapi_map_MapViewLayoutParams_Builder>> layoutMode_batch(List<com_baidu_mapapi_map_MapViewLayoutParams_ELayoutMode> var1) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::layoutMode_batch', [for (int i = 0; i < this.length; i++) {"var1": var1[i].index, "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  Future<List<com_baidu_mapapi_map_MapViewLayoutParams_Builder>> yOffset_batch(List<int> var1) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::yOffset_batch', [for (int i = 0; i < this.length; i++) {"var1": var1[i], "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => com_baidu_mapapi_map_MapViewLayoutParams_Builder()..refId = result..tag = 'bmap_map_fluttify').toList();
      kNativeObjectPool.addAll(typedResult);
      return typedResult;
    }
  }
  
  //endregion
}